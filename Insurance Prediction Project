{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Importing Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import category_encoders as ce\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from catboost import CatBoostClassifier\n",
    "from lightgbm import LGBMClassifier\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import confusion_matrix, classification_report, roc_auc_score\n",
    "from sklearn.model_selection import cross_val_score, RepeatedStratifiedKFold, StratifiedKFold, train_test_split\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.ensemble import VotingClassifier\n",
    "from xgboost import XGBClassifier\n",
    "from sklearn.metrics import plot_confusion_matrix\n",
    "from sklearn.metrics import f1_score\n",
    "from sklearn import metrics\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from imblearn.over_sampling import SMOTE"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Loading the Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "train=pd.read_csv(\"train_data.csv\")\n",
    "test=pd.read_csv(\"test_data.csv\")\n",
    "variable_description=pd.read_csv(\"VariableDescription.csv\")\n",
    "sample_submission=pd.read_csv(\"Submission1.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Exploring the Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer Id</th>\n",
       "      <th>YearOfObservation</th>\n",
       "      <th>Insured_Period</th>\n",
       "      <th>Residential</th>\n",
       "      <th>Building_Painted</th>\n",
       "      <th>Building_Fenced</th>\n",
       "      <th>Garden</th>\n",
       "      <th>Settlement</th>\n",
       "      <th>Building Dimension</th>\n",
       "      <th>Building_Type</th>\n",
       "      <th>Date_of_Occupancy</th>\n",
       "      <th>NumberOfWindows</th>\n",
       "      <th>Geo_Code</th>\n",
       "      <th>Claim</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>H14663</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>N</td>\n",
       "      <td>V</td>\n",
       "      <td>V</td>\n",
       "      <td>U</td>\n",
       "      <td>290.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1960.0</td>\n",
       "      <td>.</td>\n",
       "      <td>1053</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>H2037</td>\n",
       "      <td>2015</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>V</td>\n",
       "      <td>N</td>\n",
       "      <td>O</td>\n",
       "      <td>R</td>\n",
       "      <td>490.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1850.0</td>\n",
       "      <td>4</td>\n",
       "      <td>1053</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>H3802</td>\n",
       "      <td>2014</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>N</td>\n",
       "      <td>V</td>\n",
       "      <td>V</td>\n",
       "      <td>U</td>\n",
       "      <td>595.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1960.0</td>\n",
       "      <td>.</td>\n",
       "      <td>1053</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>H3834</td>\n",
       "      <td>2013</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>V</td>\n",
       "      <td>V</td>\n",
       "      <td>V</td>\n",
       "      <td>U</td>\n",
       "      <td>2840.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1960.0</td>\n",
       "      <td>.</td>\n",
       "      <td>1053</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>H5053</td>\n",
       "      <td>2014</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>V</td>\n",
       "      <td>N</td>\n",
       "      <td>O</td>\n",
       "      <td>R</td>\n",
       "      <td>680.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1800.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1053</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Customer Id  YearOfObservation  Insured_Period  Residential  \\\n",
       "0      H14663               2013             1.0            0   \n",
       "1       H2037               2015             1.0            0   \n",
       "2       H3802               2014             1.0            0   \n",
       "3       H3834               2013             1.0            0   \n",
       "4       H5053               2014             1.0            0   \n",
       "\n",
       "  Building_Painted Building_Fenced Garden Settlement  Building Dimension  \\\n",
       "0                N               V      V          U               290.0   \n",
       "1                V               N      O          R               490.0   \n",
       "2                N               V      V          U               595.0   \n",
       "3                V               V      V          U              2840.0   \n",
       "4                V               N      O          R               680.0   \n",
       "\n",
       "   Building_Type  Date_of_Occupancy NumberOfWindows Geo_Code  Claim  \n",
       "0              1             1960.0               .     1053      0  \n",
       "1              1             1850.0               4     1053      0  \n",
       "2              1             1960.0               .     1053      0  \n",
       "3              1             1960.0               .     1053      0  \n",
       "4              1             1800.0               3     1053      0  "
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 7160 entries, 0 to 7159\n",
      "Data columns (total 14 columns):\n",
      " #   Column              Non-Null Count  Dtype  \n",
      "---  ------              --------------  -----  \n",
      " 0   Customer Id         7160 non-null   object \n",
      " 1   YearOfObservation   7160 non-null   int64  \n",
      " 2   Insured_Period      7160 non-null   float64\n",
      " 3   Residential         7160 non-null   int64  \n",
      " 4   Building_Painted    7160 non-null   object \n",
      " 5   Building_Fenced     7160 non-null   object \n",
      " 6   Garden              7153 non-null   object \n",
      " 7   Settlement          7160 non-null   object \n",
      " 8   Building Dimension  7054 non-null   float64\n",
      " 9   Building_Type       7160 non-null   int64  \n",
      " 10  Date_of_Occupancy   6652 non-null   float64\n",
      " 11  NumberOfWindows     7160 non-null   object \n",
      " 12  Geo_Code            7058 non-null   object \n",
      " 13  Claim               7160 non-null   int64  \n",
      "dtypes: float64(3), int64(4), object(7)\n",
      "memory usage: 783.2+ KB\n"
     ]
    }
   ],
   "source": [
    "train.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Customer Id</th>\n",
       "      <th>YearOfObservation</th>\n",
       "      <th>Insured_Period</th>\n",
       "      <th>Residential</th>\n",
       "      <th>Building_Painted</th>\n",
       "      <th>Building_Fenced</th>\n",
       "      <th>Garden</th>\n",
       "      <th>Settlement</th>\n",
       "      <th>Building Dimension</th>\n",
       "      <th>Building_Type</th>\n",
       "      <th>Date_of_Occupancy</th>\n",
       "      <th>NumberOfWindows</th>\n",
       "      <th>Geo_Code</th>\n",
       "      <th>Claim</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>7160</td>\n",
       "      <td>7160.000000</td>\n",
       "      <td>7160.000000</td>\n",
       "      <td>7160.000000</td>\n",
       "      <td>7160</td>\n",
       "      <td>7160</td>\n",
       "      <td>7153</td>\n",
       "      <td>7160</td>\n",
       "      <td>7054.000000</td>\n",
       "      <td>7160.000000</td>\n",
       "      <td>6652.000000</td>\n",
       "      <td>7160</td>\n",
       "      <td>7058</td>\n",
       "      <td>7160.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>7160</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>11</td>\n",
       "      <td>1307</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>H1810</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>V</td>\n",
       "      <td>N</td>\n",
       "      <td>O</td>\n",
       "      <td>R</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>.</td>\n",
       "      <td>6088</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5382</td>\n",
       "      <td>3608</td>\n",
       "      <td>3602</td>\n",
       "      <td>3610</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3551</td>\n",
       "      <td>143</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2013.669553</td>\n",
       "      <td>0.909758</td>\n",
       "      <td>0.305447</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1883.727530</td>\n",
       "      <td>2.186034</td>\n",
       "      <td>1964.456404</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.228212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>NaN</td>\n",
       "      <td>1.383769</td>\n",
       "      <td>0.239756</td>\n",
       "      <td>0.460629</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2278.157745</td>\n",
       "      <td>0.940632</td>\n",
       "      <td>36.002014</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.419709</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2012.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1545.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2012.000000</td>\n",
       "      <td>0.997268</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>528.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1960.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2013.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1083.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1970.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2015.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2289.750000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1980.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>NaN</td>\n",
       "      <td>2016.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>20940.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>2016.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Customer Id  YearOfObservation  Insured_Period  Residential  \\\n",
       "count         7160        7160.000000     7160.000000  7160.000000   \n",
       "unique        7160                NaN             NaN          NaN   \n",
       "top          H1810                NaN             NaN          NaN   \n",
       "freq             1                NaN             NaN          NaN   \n",
       "mean           NaN        2013.669553        0.909758     0.305447   \n",
       "std            NaN           1.383769        0.239756     0.460629   \n",
       "min            NaN        2012.000000        0.000000     0.000000   \n",
       "25%            NaN        2012.000000        0.997268     0.000000   \n",
       "50%            NaN        2013.000000        1.000000     0.000000   \n",
       "75%            NaN        2015.000000        1.000000     1.000000   \n",
       "max            NaN        2016.000000        1.000000     1.000000   \n",
       "\n",
       "       Building_Painted Building_Fenced Garden Settlement  Building Dimension  \\\n",
       "count              7160            7160   7153       7160         7054.000000   \n",
       "unique                2               2      2          2                 NaN   \n",
       "top                   V               N      O          R                 NaN   \n",
       "freq               5382            3608   3602       3610                 NaN   \n",
       "mean                NaN             NaN    NaN        NaN         1883.727530   \n",
       "std                 NaN             NaN    NaN        NaN         2278.157745   \n",
       "min                 NaN             NaN    NaN        NaN            1.000000   \n",
       "25%                 NaN             NaN    NaN        NaN          528.000000   \n",
       "50%                 NaN             NaN    NaN        NaN         1083.000000   \n",
       "75%                 NaN             NaN    NaN        NaN         2289.750000   \n",
       "max                 NaN             NaN    NaN        NaN        20940.000000   \n",
       "\n",
       "        Building_Type  Date_of_Occupancy NumberOfWindows Geo_Code        Claim  \n",
       "count     7160.000000        6652.000000            7160     7058  7160.000000  \n",
       "unique            NaN                NaN              11     1307          NaN  \n",
       "top               NaN                NaN               .     6088          NaN  \n",
       "freq              NaN                NaN            3551      143          NaN  \n",
       "mean         2.186034        1964.456404             NaN      NaN     0.228212  \n",
       "std          0.940632          36.002014             NaN      NaN     0.419709  \n",
       "min          1.000000        1545.000000             NaN      NaN     0.000000  \n",
       "25%          2.000000        1960.000000             NaN      NaN     0.000000  \n",
       "50%          2.000000        1970.000000             NaN      NaN     0.000000  \n",
       "75%          3.000000        1980.000000             NaN      NaN     0.000000  \n",
       "max          4.000000        2016.000000             NaN      NaN     1.000000  "
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.describe(include='all')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(7160, 14)"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "   .    3551\n",
       "4        939\n",
       "3        844\n",
       "5        639\n",
       "2        363\n",
       "6        306\n",
       "7        211\n",
       "8        116\n",
       "1         75\n",
       ">=10      67\n",
       "9         49\n",
       "Name: NumberOfWindows, dtype: int64"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.NumberOfWindows.value_counts() #You might need to remove!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2    3305\n",
       "1    1716\n",
       "3    1230\n",
       "4     909\n",
       "Name: Building_Type, dtype: int64"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.Building_Type.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x18a00006a88>"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(train.Insured_Period)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "R    3610\n",
       "U    3550\n",
       "Name: Settlement, dtype: int64"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.Settlement.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "V    5382\n",
       "N    1778\n",
       "Name: Building_Painted, dtype: int64"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.Building_Painted.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "N    3608\n",
       "V    3552\n",
       "Name: Building_Fenced, dtype: int64"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.Building_Fenced.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "O    3602\n",
       "V    3551\n",
       "Name: Garden, dtype: int64"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.Garden.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2012    1858\n",
       "2013    1811\n",
       "2014    1373\n",
       "2015    1075\n",
       "2016    1043\n",
       "Name: YearOfObservation, dtype: int64"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train['YearOfObservation'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x18a7ff5a848>"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "train.Claim.value_counts().plot.bar()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Customer Id            object\n",
       "YearOfObservation       int64\n",
       "Insured_Period        float64\n",
       "Residential             int64\n",
       "Building_Painted       object\n",
       "Building_Fenced        object\n",
       "Garden                 object\n",
       "Settlement             object\n",
       "Building Dimension    float64\n",
       "Building_Type           int64\n",
       "Date_of_Occupancy     float64\n",
       "NumberOfWindows        object\n",
       "Geo_Code               object\n",
       "Claim                   int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Variable</th>\n",
       "      <th>Description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Customer Id</td>\n",
       "      <td>Identification number for the Policy holder</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>YearOfObservation</td>\n",
       "      <td>year of observation for the insured policy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Insured_Period</td>\n",
       "      <td>duration of insurance policy in Olusola Insura...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Residential</td>\n",
       "      <td>is the building a residential building or not</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Building_Painted</td>\n",
       "      <td>is the building painted or not (N-Painted, V-N...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Building_Fenced</td>\n",
       "      <td>is the building fence or not (N-Fenced, V-Not ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Garden</td>\n",
       "      <td>building has garden or not (V-has garden; O-no...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Settlement</td>\n",
       "      <td>Area where the building is located. (R- rural ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Building Dimension</td>\n",
       "      <td>Size of the insured building in m2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Building_Type</td>\n",
       "      <td>The type of building (Type 1, 2, 3, 4)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Date_of_Occupancy</td>\n",
       "      <td>date building was first occupied</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>NumberOfWindows</td>\n",
       "      <td>number of windows in the building</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Geo Code</td>\n",
       "      <td>Geographical Code of the Insured building</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Claim</td>\n",
       "      <td>target variable. (0: no claim, 1: at least one...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Variable                                        Description\n",
       "0          Customer Id        Identification number for the Policy holder\n",
       "1    YearOfObservation         year of observation for the insured policy\n",
       "2       Insured_Period  duration of insurance policy in Olusola Insura...\n",
       "3          Residential      is the building a residential building or not\n",
       "4     Building_Painted  is the building painted or not (N-Painted, V-N...\n",
       "5      Building_Fenced  is the building fence or not (N-Fenced, V-Not ...\n",
       "6               Garden  building has garden or not (V-has garden; O-no...\n",
       "7           Settlement  Area where the building is located. (R- rural ...\n",
       "8   Building Dimension                 Size of the insured building in m2\n",
       "9        Building_Type             The type of building (Type 1, 2, 3, 4)\n",
       "10   Date_of_Occupancy                   date building was first occupied\n",
       "11     NumberOfWindows                  number of windows in the building\n",
       "12            Geo Code          Geographical Code of the Insured building\n",
       "13               Claim  target variable. (0: no claim, 1: at least one..."
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "variable_description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Customer Id', 'YearOfObservation', 'Insured_Period', 'Residential',\n",
       "       'Building_Painted', 'Building_Fenced', 'Garden', 'Settlement',\n",
       "       'Building Dimension', 'Building_Type', 'Date_of_Occupancy',\n",
       "       'NumberOfWindows', 'Geo_Code', 'Claim'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Customer Id', 'YearOfObservation', 'Insured_Period', 'Residential',\n",
       "       'Building_Painted', 'Building_Fenced', 'Garden', 'Settlement',\n",
       "       'Building Dimension', 'Building_Type', 'Date_of_Occupancy',\n",
       "       'NumberOfWindows', 'Geo_Code'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Customer Id             0\n",
       "YearOfObservation       0\n",
       "Insured_Period          0\n",
       "Residential             0\n",
       "Building_Painted        0\n",
       "Building_Fenced         0\n",
       "Garden                  7\n",
       "Settlement              0\n",
       "Building Dimension    106\n",
       "Building_Type           0\n",
       "Date_of_Occupancy     508\n",
       "NumberOfWindows         0\n",
       "Geo_Code              102\n",
       "Claim                   0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Customer Id             0\n",
       "YearOfObservation       0\n",
       "Insured_Period          0\n",
       "Residential             0\n",
       "Building_Painted        0\n",
       "Building_Fenced         0\n",
       "Garden                  4\n",
       "Settlement              0\n",
       "Building Dimension     13\n",
       "Building_Type           0\n",
       "Date_of_Occupancy     728\n",
       "NumberOfWindows         0\n",
       "Geo_Code               13\n",
       "dtype: int64"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data Preparation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "0\n"
     ]
    }
   ],
   "source": [
    "#Checking for Duplicates in Data\n",
    "print (train.duplicated().sum())\n",
    "print (test.duplicated().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [],
   "source": [
    "train['Building Dimension']=train['Building Dimension'].fillna(train['Building Dimension'].median())\n",
    "train['Garden']=train['Garden'].fillna('O')\n",
    "train['Date_of_Occupancy']=train['Date_of_Occupancy'].fillna(1970.0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [],
   "source": [
    "test['Building Dimension']=test['Building Dimension'].fillna(test['Building Dimension'].median())\n",
    "test['Garden']=test['Garden'].fillna('V')\n",
    "test['Date_of_Occupancy']=test['Date_of_Occupancy'].fillna(1960.0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [],
   "source": [
    "train=train.drop(['Geo_Code'],1)\n",
    "test=test.drop(['Geo_Code'],1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [],
   "source": [
    "train=train.drop(['YearOfObservation','Date_of_Occupancy', 'NumberOfWindows'],1)\n",
    "test=test.drop(['YearOfObservation','Date_of_Occupancy','NumberOfWindows'],1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [],
   "source": [
    "train['Residential']=train['Residential'].astype('category')\n",
    "train['Building_Painted']=train['Building_Painted'].astype('category')\n",
    "train['Building_Fenced']=train['Building_Fenced'].astype('category')\n",
    "train['Garden']=train['Garden'].astype('category')\n",
    "train['Settlement']=train['Settlement'].astype('category')\n",
    "train['Building_Type']=train['Building_Type'].astype('category')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [],
   "source": [
    "test['Residential']=test['Residential'].astype('category')\n",
    "test['Building_Painted']=test['Building_Painted'].astype('category')\n",
    "test['Building_Fenced']=test['Building_Fenced'].astype('category')\n",
    "test['Garden']=test['Garden'].astype('category')\n",
    "test['Settlement']=test['Settlement'].astype('category')\n",
    "test['Building_Type']=test['Building_Type'].astype('category')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Customer Id             object\n",
       "Insured_Period         float64\n",
       "Residential           category\n",
       "Building_Painted      category\n",
       "Building_Fenced       category\n",
       "Garden                category\n",
       "Settlement            category\n",
       "Building Dimension     float64\n",
       "Building_Type         category\n",
       "Claim                    int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [],
   "source": [
    "Categorical_Data=train[['Residential','Building_Painted','Building_Fenced','Garden','Settlement','Building_Type']]\n",
    "Categorical_Data_Test=test[['Residential','Building_Painted','Building_Fenced','Garden','Settlement','Building_Type']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [],
   "source": [
    "Numerical_Data=train.drop(Categorical_Data,1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [],
   "source": [
    "Numerical_Data=Numerical_Data.drop(['Customer Id','Claim'],1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [],
   "source": [
    "Numerical_Data_Test=test.drop(Categorical_Data,1)\n",
    "Numerical_Data_Test=Numerical_Data_Test.drop(['Customer Id'],1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [],
   "source": [
    "encoders=ce.TargetEncoder()\n",
    "Target_Response=train['Claim']\n",
    "encoders.fit_transform(Categorical_Data,Target_Response)\n",
    "Categorical_Data=encoders.transform(Categorical_Data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [],
   "source": [
    "Categorical_Data_Test=encoders.transform(Categorical_Data_Test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [],
   "source": [
    "X=Categorical_Data\n",
    "X['Insured_Period']=Numerical_Data['Insured_Period']\n",
    "X['Building Dimension'] = Numerical_Data['Building Dimension']\n",
    "y=train['Claim']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [],
   "source": [
    "Test=Categorical_Data_Test\n",
    "Test['Insured_Period']=Numerical_Data_Test['Insured_Period']\n",
    "Test['Building Dimension'] = Numerical_Data_Test['Building Dimension']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(7160, 8) (7160,)\n",
      "(11052, 8) (11052,)\n"
     ]
    }
   ],
   "source": [
    "smote = SMOTE(random_state=10)\n",
    "X_new, y_new = smote.fit_resample(X,y)\n",
    "print(X.shape, y.shape)\n",
    "print(X_new.shape, y_new.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Modelling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train,X_test,y_train,y_test=train_test_split(X_new,y_new,test_size=0.33,random_state=42)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Linear Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "model_log=LogisticRegression(C=100, solver='newton-cg')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LogisticRegression(C=100, solver='newton-cg')"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_log.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "pred=model_log.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.6508028635016467\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_confusion_matrix(model_log,X_test, y_test)\n",
    "metrics.plot_roc_curve(model_log, X_test, y_test)\n",
    "print (f1_score(y_test, pred, average='macro'))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [],
   "source": [
    "prediction1=model_log.predict(Test)\n",
    "identity=test['Customer Id']\n",
    "\n",
    "Prediction=pd.DataFrame(prediction1,identity)\n",
    "Prediction.columns=['Claim']\n",
    "\n",
    "Prediction.to_csv(\"prediction1.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.6350375931229901\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "model_log_2=LogisticRegression()\n",
    "model_log_2.fit(X_train,y_train)\n",
    "pred=model_log_2.predict(X_test)\n",
    "plot_confusion_matrix(model_log_2,X_test, y_test)\n",
    "metrics.plot_roc_curve(model_log_2, X_test, y_test)\n",
    "print (f1_score(y_test, pred, average='macro'))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [],
   "source": [
    "prediction2=model_log_2.predict(Test)\n",
    "identity=test['Customer Id']\n",
    "\n",
    "Prediction=pd.DataFrame(prediction2,identity)\n",
    "Prediction.columns=['Claim']\n",
    "\n",
    "Prediction.to_csv(\"prediction2.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "####  Radom Forest Classifiers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "model_forest=RandomForestClassifier()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier()"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_forest.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "pred=model_forest.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.8077670949479072\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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ysvLWbduHatWreLJJ58kNzeXXbt2MWvWLFauXElOTg4ej4f58+cDcNNNN/Hwww8fV2w13K5H0OZZH0F4/faN9WzYfaRZjzm4Ryd+PWmI6/3HjBnD2rVrASgqKmLy5MkUFhZSWVnJ7373OyZPnkxubi4TJ07k7LPPZunSpfTs2ZPXX3+dxMREVq1axbXXXkuHDh04++yzfcctKyvjpptuYuXKlcTExPDnP/+ZcePGMWfOHBYuXIjH4yEnJ4e77rqLiooK/vnPfxIfH89bb71Fly5dGox33rx5/OEPf0BVueiii3jooYcA6NixI3feeSfvvPMOf/rTn0hMTOTOO++kqKiItLQ05syZQ0ZGBrNmzeKJJ54gJiaGwYMH8+CDD/LEE08QHR3NCy+8wOOPP84DDzzAI488Qo8ePQBn6OH1119fL5b777+fN954g9LSUs4880yefPJJRKTeOebPn8/HH3/MHXfcATjt1YsXL6agoICLL76YnJwcLrjgAvbv38/IkSN5/PHHeeaZZ7j44ouZMmUKq1atCngt5513HmeeeSaffvopl1xyCXfddZcvts2bNxMfH09aWppv29y5c7nqqqvYuHEjixYtqlczCGT27NnMmDGDMWPG+GL3r8UcC1Xlgw8+YO7cuQDMmDGD3/zmN9x0U+2VfkWE4uJiqqqqKC0tJS4ujk6dOlFaWurbFhsbS0lJie93NXbsWK6++mqqqqqIiTm+ojxiSkXffQRWI4hIHo+H999/n0suuQRwCrzXXnuNL774gg8//JC77rqLmmm0vv76a2655RbWr19Pamoq//rXvwC45pprmDVrFp999lmtY9fUMtatW8e8efOYMWOGr/qek5PD3LlzWb58Offeey8dOnRg9erVjBkzhueff953jJ/+9Ke+pqF169axe/du7rnnHj744APWrFnDihUrWLhwIQDFxcUMHTqUzz//nNGjR3PbbbexYMECX6K69957AXjwwQdZvXo1a9eu5YknniArK4sbb7yRmTNnsmbNGsaOHUtOTg6jRo0K+vndeuutrFixgpycHEpLS3nzzTcDngPgkUceYfbs2axZs4YlS5aQmJhY61iLFi2iX79+vhhqVFZWNngtAIcOHeLjjz+ulQQAPv30U049tfYkBy+99BJTp05l2rRpzJs3L+j1Aa4/i02bNvl+V3V/6jY9FhQUkJqa6iuoMzMz2bVrV71jTpkyhaSkJDIyMujduzd33303Xbp0oWfPntx999307t2bjIwMUlJSuOCCCwCIioqif//+fPnll66urzGRVyOwRBAWTfnm3pxKS0sZOXIkubm5jBo1iu9+97uA803tl7/8JYsXLyYqKopdu3axb98+AF97PcCoUaPIzc3l8OHDHDp0iHPPPReAq666irfffhuATz75hNtuuw2AgQMH0qdPHzZv3gzAuHHjSE5OJjk5mZSUFCZNmgTAsGHDfLUTcJqG/L99vv7665x33nmkp6cDMH36dBYvXsyll15KdHQ0l19+OeAUSjk5Ob7r8ng8ZGRkADB8+HCmT5/OpZdeyqWXHt/kAB9++CEPP/wwJSUlHDx4kCFDhjBp0qSA5zjrrLO48847mT59OpdddhmZmZmuztHYtQBMnTo14Pv27Nnj+5wAVqxYQXp6On369CEzM5Nrr72WwsJCOnfuHHBETVNH2Zx88smsWbPG1b6B5ugMdL7ly5cTHR3N7t27KSwsZOzYsYwfP57OnTvz+uuvs337dlJTU/n+97/PCy+8wJVXXglAt27d2L17t6sE1piQlooiMkFENonIFhGpt36BiMSLyEve1z8XkaxQxWL3EUSmmj6CHTt2UFFR4fv2/uKLL3LgwAFWrVrFmjVr6N69u+9bfHx8vO/90dHRVFVVoaoNFhiNTcjrf6yoqCjf86ioqIBt3W6OmZCQQLR3Fl1VZciQIb7+hXXr1vHuu+8C8O9//5tbbrmFVatWMWrUqIDnGzJkCKtWrWrwXOA0fd18880sWLCAdevWcf311/s+q0Dn+PnPf87TTz9NaWkpZ5xxBl999VWjx/e/5oauBSApKSng+xITE2uNm583bx5fffUVWVlZ9OvXjyNHjvhqdV27dqWwsNC378GDB31NSm4+C2hajSAtLY1Dhw75Pvu8vDxf046/uXPnMmHCBGJjY+nWrRtnnXUWK1eu5L333qNv376kp6cTGxvLZZddVquPp6ysrF6N61iErFQUkWhgNjARGAxME5HBdXa7DihU1f7Ao8BDoYrH+ggiW0pKCrNmzeKRRx6hsrKSw4cP061bN2JjY/nwww/ZsWNHo+9PTU0lJSWFTz75BHASSY1zzjnH93zz5s188803nHzyyccV7+jRo/n444/Jz8/H4/Ewb948X23E38knn8yBAwd8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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_confusion_matrix(model_forest,X_test, y_test)\n",
    "metrics.plot_roc_curve(model_forest, X_test, y_test)\n",
    "print (f1_score(y_test, pred, average='macro'))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [],
   "source": [
    "prediction3=model_forest.predict(Test)\n",
    "identity=test['Customer Id']\n",
    "\n",
    "Prediction=pd.DataFrame(prediction3,identity)\n",
    "Prediction.columns=['Claim']\n",
    "\n",
    "Prediction.to_csv(\"prediction3.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### XGB Classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.8280888467038876\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "xgb=XGBClassifier()\n",
    "\n",
    "xgb.fit(X_train,y_train)\n",
    "\n",
    "pred=xgb.predict(X_test)\n",
    "\n",
    "plot_confusion_matrix(xgb,X_test, y_test)\n",
    "metrics.plot_roc_curve(xgb, X_test, y_test)\n",
    "print (f1_score(y_test, pred, average='macro'))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [],
   "source": [
    "prediction4=xgb.predict(Test)\n",
    "identity=test['Customer Id']\n",
    "\n",
    "Prediction=pd.DataFrame(prediction4,identity)\n",
    "Prediction.columns=['Claim']\n",
    "\n",
    "Prediction.to_csv(\"prediction4.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### CatBoost Classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Learning rate set to 0.024221\n",
      "0:\tlearn: 0.6771901\ttotal: 23.5ms\tremaining: 23.5s\n",
      "1:\tlearn: 0.6626170\ttotal: 32.7ms\tremaining: 16.3s\n",
      "2:\tlearn: 0.6468433\ttotal: 41.6ms\tremaining: 13.8s\n",
      "3:\tlearn: 0.6346931\ttotal: 50.6ms\tremaining: 12.6s\n",
      "4:\tlearn: 0.6229723\ttotal: 59.5ms\tremaining: 11.8s\n",
      "5:\tlearn: 0.6103396\ttotal: 68.4ms\tremaining: 11.3s\n",
      "6:\tlearn: 0.6014679\ttotal: 78.3ms\tremaining: 11.1s\n",
      "7:\tlearn: 0.5919152\ttotal: 87.2ms\tremaining: 10.8s\n",
      "8:\tlearn: 0.5830286\ttotal: 96.1ms\tremaining: 10.6s\n",
      "9:\tlearn: 0.5747590\ttotal: 105ms\tremaining: 10.4s\n",
      "10:\tlearn: 0.5673109\ttotal: 114ms\tremaining: 10.2s\n",
      "11:\tlearn: 0.5586439\ttotal: 123ms\tremaining: 10.1s\n",
      "12:\tlearn: 0.5523420\ttotal: 132ms\tremaining: 10s\n",
      "13:\tlearn: 0.5453802\ttotal: 141ms\tremaining: 9.9s\n",
      "14:\tlearn: 0.5379657\ttotal: 150ms\tremaining: 9.82s\n",
      "15:\tlearn: 0.5323417\ttotal: 161ms\tremaining: 9.91s\n",
      "16:\tlearn: 0.5262904\ttotal: 173ms\tremaining: 9.99s\n",
      "17:\tlearn: 0.5201682\ttotal: 185ms\tremaining: 10.1s\n",
      "18:\tlearn: 0.5172472\ttotal: 195ms\tremaining: 10.1s\n",
      "19:\tlearn: 0.5133791\ttotal: 204ms\tremaining: 10s\n",
      "20:\tlearn: 0.5096865\ttotal: 215ms\tremaining: 10s\n",
      "21:\tlearn: 0.5054308\ttotal: 224ms\tremaining: 9.97s\n",
      "22:\tlearn: 0.5012750\ttotal: 233ms\tremaining: 9.91s\n",
      "23:\tlearn: 0.4982919\ttotal: 246ms\tremaining: 10s\n",
      "24:\tlearn: 0.4932247\ttotal: 255ms\tremaining: 9.94s\n",
      "25:\tlearn: 0.4903211\ttotal: 264ms\tremaining: 9.88s\n",
      "26:\tlearn: 0.4870135\ttotal: 273ms\tremaining: 9.83s\n",
      "27:\tlearn: 0.4828382\ttotal: 282ms\tremaining: 9.79s\n",
      "28:\tlearn: 0.4805013\ttotal: 291ms\tremaining: 9.74s\n",
      "29:\tlearn: 0.4776024\ttotal: 300ms\tremaining: 9.7s\n",
      "30:\tlearn: 0.4759247\ttotal: 309ms\tremaining: 9.65s\n",
      "31:\tlearn: 0.4736956\ttotal: 318ms\tremaining: 9.61s\n",
      "32:\tlearn: 0.4718637\ttotal: 327ms\tremaining: 9.57s\n",
      "33:\tlearn: 0.4698855\ttotal: 338ms\tremaining: 9.61s\n",
      "34:\tlearn: 0.4680269\ttotal: 350ms\tremaining: 9.65s\n",
      "35:\tlearn: 0.4649034\ttotal: 361ms\tremaining: 9.68s\n",
      "36:\tlearn: 0.4627463\ttotal: 371ms\tremaining: 9.66s\n",
      "37:\tlearn: 0.4594073\ttotal: 381ms\tremaining: 9.65s\n",
      "38:\tlearn: 0.4568413\ttotal: 393ms\tremaining: 9.68s\n",
      "39:\tlearn: 0.4548499\ttotal: 405ms\tremaining: 9.73s\n",
      "40:\tlearn: 0.4523005\ttotal: 417ms\tremaining: 9.74s\n",
      "41:\tlearn: 0.4508801\ttotal: 426ms\tremaining: 9.71s\n",
      "42:\tlearn: 0.4488463\ttotal: 435ms\tremaining: 9.68s\n",
      "43:\tlearn: 0.4477124\ttotal: 450ms\tremaining: 9.78s\n",
      "44:\tlearn: 0.4461765\ttotal: 465ms\tremaining: 9.88s\n",
      "45:\tlearn: 0.4446526\ttotal: 476ms\tremaining: 9.87s\n",
      "46:\tlearn: 0.4427753\ttotal: 485ms\tremaining: 9.83s\n",
      "47:\tlearn: 0.4414530\ttotal: 494ms\tremaining: 9.8s\n",
      "48:\tlearn: 0.4402682\ttotal: 506ms\tremaining: 9.81s\n",
      "49:\tlearn: 0.4387389\ttotal: 515ms\tremaining: 9.78s\n",
      "50:\tlearn: 0.4380617\ttotal: 526ms\tremaining: 9.79s\n",
      "51:\tlearn: 0.4360700\ttotal: 538ms\tremaining: 9.81s\n",
      "52:\tlearn: 0.4343557\ttotal: 548ms\tremaining: 9.79s\n",
      "53:\tlearn: 0.4334469\ttotal: 557ms\tremaining: 9.76s\n",
      "54:\tlearn: 0.4327882\ttotal: 569ms\tremaining: 9.78s\n",
      "55:\tlearn: 0.4318165\ttotal: 581ms\tremaining: 9.79s\n",
      "56:\tlearn: 0.4308037\ttotal: 593ms\tremaining: 9.81s\n",
      "57:\tlearn: 0.4291581\ttotal: 604ms\tremaining: 9.81s\n",
      "58:\tlearn: 0.4275186\ttotal: 615ms\tremaining: 9.81s\n",
      "59:\tlearn: 0.4267369\ttotal: 627ms\tremaining: 9.82s\n",
      "60:\tlearn: 0.4261048\ttotal: 638ms\tremaining: 9.82s\n",
      "61:\tlearn: 0.4253999\ttotal: 649ms\tremaining: 9.82s\n",
      "62:\tlearn: 0.4243079\ttotal: 661ms\tremaining: 9.82s\n",
      "63:\tlearn: 0.4231202\ttotal: 672ms\tremaining: 9.82s\n",
      "64:\tlearn: 0.4216049\ttotal: 686ms\tremaining: 9.87s\n",
      "65:\tlearn: 0.4208544\ttotal: 695ms\tremaining: 9.84s\n",
      "66:\tlearn: 0.4197822\ttotal: 706ms\tremaining: 9.83s\n",
      "67:\tlearn: 0.4183653\ttotal: 717ms\tremaining: 9.82s\n",
      "68:\tlearn: 0.4171170\ttotal: 729ms\tremaining: 9.84s\n",
      "69:\tlearn: 0.4158070\ttotal: 738ms\tremaining: 9.81s\n",
      "70:\tlearn: 0.4152404\ttotal: 747ms\tremaining: 9.78s\n",
      "71:\tlearn: 0.4141969\ttotal: 756ms\tremaining: 9.74s\n",
      "72:\tlearn: 0.4135804\ttotal: 765ms\tremaining: 9.72s\n",
      "73:\tlearn: 0.4127557\ttotal: 775ms\tremaining: 9.69s\n",
      "74:\tlearn: 0.4119772\ttotal: 784ms\tremaining: 9.67s\n",
      "75:\tlearn: 0.4111504\ttotal: 793ms\tremaining: 9.64s\n",
      "76:\tlearn: 0.4103304\ttotal: 801ms\tremaining: 9.61s\n",
      "77:\tlearn: 0.4088307\ttotal: 810ms\tremaining: 9.57s\n",
      "78:\tlearn: 0.4082358\ttotal: 821ms\tremaining: 9.57s\n",
      "79:\tlearn: 0.4078779\ttotal: 832ms\tremaining: 9.56s\n",
      "80:\tlearn: 0.4070928\ttotal: 846ms\tremaining: 9.6s\n",
      "81:\tlearn: 0.4065687\ttotal: 861ms\tremaining: 9.64s\n",
      "82:\tlearn: 0.4057030\ttotal: 875ms\tremaining: 9.66s\n",
      "83:\tlearn: 0.4051919\ttotal: 892ms\tremaining: 9.73s\n",
      "84:\tlearn: 0.4043081\ttotal: 905ms\tremaining: 9.74s\n",
      "85:\tlearn: 0.4039315\ttotal: 917ms\tremaining: 9.75s\n",
      "86:\tlearn: 0.4030032\ttotal: 928ms\tremaining: 9.74s\n",
      "87:\tlearn: 0.4026655\ttotal: 939ms\tremaining: 9.73s\n",
      "88:\tlearn: 0.4020865\ttotal: 950ms\tremaining: 9.73s\n",
      "89:\tlearn: 0.4016170\ttotal: 961ms\tremaining: 9.72s\n",
      "90:\tlearn: 0.4011140\ttotal: 973ms\tremaining: 9.72s\n",
      "91:\tlearn: 0.4007889\ttotal: 985ms\tremaining: 9.72s\n",
      "92:\tlearn: 0.3998431\ttotal: 997ms\tremaining: 9.72s\n",
      "93:\tlearn: 0.3994819\ttotal: 1.01s\tremaining: 9.72s\n",
      "94:\tlearn: 0.3989717\ttotal: 1.02s\tremaining: 9.71s\n",
      "95:\tlearn: 0.3983899\ttotal: 1.03s\tremaining: 9.71s\n",
      "96:\tlearn: 0.3978034\ttotal: 1.05s\tremaining: 9.76s\n",
      "97:\tlearn: 0.3973389\ttotal: 1.06s\tremaining: 9.79s\n",
      "98:\tlearn: 0.3968593\ttotal: 1.08s\tremaining: 9.81s\n",
      "99:\tlearn: 0.3966201\ttotal: 1.09s\tremaining: 9.81s\n",
      "100:\tlearn: 0.3963719\ttotal: 1.1s\tremaining: 9.81s\n",
      "101:\tlearn: 0.3960856\ttotal: 1.11s\tremaining: 9.8s\n",
      "102:\tlearn: 0.3949390\ttotal: 1.13s\tremaining: 9.8s\n",
      "103:\tlearn: 0.3942169\ttotal: 1.14s\tremaining: 9.81s\n",
      "104:\tlearn: 0.3935940\ttotal: 1.15s\tremaining: 9.81s\n",
      "105:\tlearn: 0.3929904\ttotal: 1.16s\tremaining: 9.79s\n",
      "106:\tlearn: 0.3927397\ttotal: 1.17s\tremaining: 9.77s\n",
      "107:\tlearn: 0.3920778\ttotal: 1.18s\tremaining: 9.74s\n",
      "108:\tlearn: 0.3918357\ttotal: 1.19s\tremaining: 9.71s\n",
      "109:\tlearn: 0.3914569\ttotal: 1.2s\tremaining: 9.68s\n",
      "110:\tlearn: 0.3912652\ttotal: 1.21s\tremaining: 9.66s\n",
      "111:\tlearn: 0.3910402\ttotal: 1.22s\tremaining: 9.65s\n",
      "112:\tlearn: 0.3908181\ttotal: 1.23s\tremaining: 9.64s\n",
      "113:\tlearn: 0.3902648\ttotal: 1.24s\tremaining: 9.65s\n",
      "114:\tlearn: 0.3899208\ttotal: 1.25s\tremaining: 9.63s\n",
      "115:\tlearn: 0.3895700\ttotal: 1.26s\tremaining: 9.6s\n",
      "116:\tlearn: 0.3891259\ttotal: 1.27s\tremaining: 9.58s\n",
      "117:\tlearn: 0.3889261\ttotal: 1.28s\tremaining: 9.55s\n",
      "118:\tlearn: 0.3884625\ttotal: 1.29s\tremaining: 9.53s\n",
      "119:\tlearn: 0.3879344\ttotal: 1.3s\tremaining: 9.51s\n",
      "120:\tlearn: 0.3874594\ttotal: 1.3s\tremaining: 9.48s\n",
      "121:\tlearn: 0.3872431\ttotal: 1.31s\tremaining: 9.46s\n",
      "122:\tlearn: 0.3870571\ttotal: 1.32s\tremaining: 9.43s\n",
      "123:\tlearn: 0.3868904\ttotal: 1.33s\tremaining: 9.41s\n",
      "124:\tlearn: 0.3867502\ttotal: 1.34s\tremaining: 9.39s\n",
      "125:\tlearn: 0.3865639\ttotal: 1.35s\tremaining: 9.36s\n",
      "126:\tlearn: 0.3864112\ttotal: 1.36s\tremaining: 9.34s\n",
      "127:\tlearn: 0.3861785\ttotal: 1.37s\tremaining: 9.32s\n",
      "128:\tlearn: 0.3860221\ttotal: 1.38s\tremaining: 9.29s\n",
      "129:\tlearn: 0.3858321\ttotal: 1.39s\tremaining: 9.29s\n",
      "130:\tlearn: 0.3853526\ttotal: 1.4s\tremaining: 9.3s\n",
      "131:\tlearn: 0.3850167\ttotal: 1.41s\tremaining: 9.29s\n",
      "132:\tlearn: 0.3847266\ttotal: 1.42s\tremaining: 9.28s\n",
      "133:\tlearn: 0.3843023\ttotal: 1.43s\tremaining: 9.26s\n",
      "134:\tlearn: 0.3841237\ttotal: 1.44s\tremaining: 9.24s\n",
      "135:\tlearn: 0.3839502\ttotal: 1.45s\tremaining: 9.22s\n",
      "136:\tlearn: 0.3837720\ttotal: 1.46s\tremaining: 9.2s\n",
      "137:\tlearn: 0.3835893\ttotal: 1.47s\tremaining: 9.18s\n",
      "138:\tlearn: 0.3833250\ttotal: 1.48s\tremaining: 9.15s\n",
      "139:\tlearn: 0.3832227\ttotal: 1.49s\tremaining: 9.13s\n",
      "140:\tlearn: 0.3829061\ttotal: 1.5s\tremaining: 9.11s\n",
      "141:\tlearn: 0.3827498\ttotal: 1.5s\tremaining: 9.09s\n",
      "142:\tlearn: 0.3824125\ttotal: 1.51s\tremaining: 9.07s\n",
      "143:\tlearn: 0.3822525\ttotal: 1.52s\tremaining: 9.05s\n",
      "144:\tlearn: 0.3821220\ttotal: 1.53s\tremaining: 9.03s\n",
      "145:\tlearn: 0.3818808\ttotal: 1.54s\tremaining: 9.01s\n",
      "146:\tlearn: 0.3817124\ttotal: 1.55s\tremaining: 8.99s\n",
      "147:\tlearn: 0.3813103\ttotal: 1.56s\tremaining: 8.97s\n",
      "148:\tlearn: 0.3811840\ttotal: 1.57s\tremaining: 8.97s\n",
      "149:\tlearn: 0.3810039\ttotal: 1.58s\tremaining: 8.96s\n",
      "150:\tlearn: 0.3808028\ttotal: 1.59s\tremaining: 8.96s\n",
      "151:\tlearn: 0.3804585\ttotal: 1.6s\tremaining: 8.95s\n",
      "152:\tlearn: 0.3803442\ttotal: 1.61s\tremaining: 8.94s\n",
      "153:\tlearn: 0.3798559\ttotal: 1.62s\tremaining: 8.92s\n",
      "154:\tlearn: 0.3797826\ttotal: 1.63s\tremaining: 8.9s\n",
      "155:\tlearn: 0.3795412\ttotal: 1.64s\tremaining: 8.88s\n",
      "156:\tlearn: 0.3794385\ttotal: 1.65s\tremaining: 8.87s\n",
      "157:\tlearn: 0.3793992\ttotal: 1.66s\tremaining: 8.85s\n",
      "158:\tlearn: 0.3792640\ttotal: 1.67s\tremaining: 8.83s\n",
      "159:\tlearn: 0.3787980\ttotal: 1.68s\tremaining: 8.81s\n",
      "160:\tlearn: 0.3784939\ttotal: 1.69s\tremaining: 8.79s\n",
      "161:\tlearn: 0.3781337\ttotal: 1.7s\tremaining: 8.77s\n",
      "162:\tlearn: 0.3780155\ttotal: 1.7s\tremaining: 8.75s\n",
      "163:\tlearn: 0.3777704\ttotal: 1.71s\tremaining: 8.73s\n",
      "164:\tlearn: 0.3775283\ttotal: 1.72s\tremaining: 8.72s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "165:\tlearn: 0.3772143\ttotal: 1.73s\tremaining: 8.71s\n",
      "166:\tlearn: 0.3767884\ttotal: 1.75s\tremaining: 8.71s\n",
      "167:\tlearn: 0.3764892\ttotal: 1.76s\tremaining: 8.7s\n",
      "168:\tlearn: 0.3761510\ttotal: 1.77s\tremaining: 8.69s\n",
      "169:\tlearn: 0.3758916\ttotal: 1.78s\tremaining: 8.68s\n",
      "170:\tlearn: 0.3757889\ttotal: 1.79s\tremaining: 8.66s\n",
      "171:\tlearn: 0.3756362\ttotal: 1.79s\tremaining: 8.64s\n",
      "172:\tlearn: 0.3755141\ttotal: 1.8s\tremaining: 8.63s\n",
      "173:\tlearn: 0.3752487\ttotal: 1.81s\tremaining: 8.61s\n",
      "174:\tlearn: 0.3751369\ttotal: 1.82s\tremaining: 8.59s\n",
      "175:\tlearn: 0.3750441\ttotal: 1.83s\tremaining: 8.57s\n",
      "176:\tlearn: 0.3749206\ttotal: 1.84s\tremaining: 8.55s\n",
      "177:\tlearn: 0.3746104\ttotal: 1.85s\tremaining: 8.54s\n",
      "178:\tlearn: 0.3745270\ttotal: 1.86s\tremaining: 8.52s\n",
      "179:\tlearn: 0.3744154\ttotal: 1.87s\tremaining: 8.5s\n",
      "180:\tlearn: 0.3741780\ttotal: 1.88s\tremaining: 8.49s\n",
      "181:\tlearn: 0.3740548\ttotal: 1.89s\tremaining: 8.47s\n",
      "182:\tlearn: 0.3739665\ttotal: 1.89s\tremaining: 8.46s\n",
      "183:\tlearn: 0.3735315\ttotal: 1.9s\tremaining: 8.44s\n",
      "184:\tlearn: 0.3731132\ttotal: 1.92s\tremaining: 8.44s\n",
      "185:\tlearn: 0.3730041\ttotal: 1.93s\tremaining: 8.43s\n",
      "186:\tlearn: 0.3728422\ttotal: 1.94s\tremaining: 8.43s\n",
      "187:\tlearn: 0.3726841\ttotal: 1.95s\tremaining: 8.41s\n",
      "188:\tlearn: 0.3725207\ttotal: 1.96s\tremaining: 8.4s\n",
      "189:\tlearn: 0.3723928\ttotal: 1.97s\tremaining: 8.38s\n",
      "190:\tlearn: 0.3722279\ttotal: 1.98s\tremaining: 8.37s\n",
      "191:\tlearn: 0.3720255\ttotal: 1.98s\tremaining: 8.35s\n",
      "192:\tlearn: 0.3718463\ttotal: 1.99s\tremaining: 8.33s\n",
      "193:\tlearn: 0.3716996\ttotal: 2s\tremaining: 8.32s\n",
      "194:\tlearn: 0.3714299\ttotal: 2.01s\tremaining: 8.3s\n",
      "195:\tlearn: 0.3712304\ttotal: 2.02s\tremaining: 8.29s\n",
      "196:\tlearn: 0.3710765\ttotal: 2.03s\tremaining: 8.27s\n",
      "197:\tlearn: 0.3709469\ttotal: 2.04s\tremaining: 8.25s\n",
      "198:\tlearn: 0.3708654\ttotal: 2.05s\tremaining: 8.24s\n",
      "199:\tlearn: 0.3707340\ttotal: 2.06s\tremaining: 8.22s\n",
      "200:\tlearn: 0.3705726\ttotal: 2.07s\tremaining: 8.21s\n",
      "201:\tlearn: 0.3702859\ttotal: 2.08s\tremaining: 8.2s\n",
      "202:\tlearn: 0.3699065\ttotal: 2.09s\tremaining: 8.2s\n",
      "203:\tlearn: 0.3698076\ttotal: 2.1s\tremaining: 8.19s\n",
      "204:\tlearn: 0.3696446\ttotal: 2.11s\tremaining: 8.18s\n",
      "205:\tlearn: 0.3695304\ttotal: 2.12s\tremaining: 8.17s\n",
      "206:\tlearn: 0.3693364\ttotal: 2.13s\tremaining: 8.16s\n",
      "207:\tlearn: 0.3692280\ttotal: 2.14s\tremaining: 8.14s\n",
      "208:\tlearn: 0.3691661\ttotal: 2.15s\tremaining: 8.13s\n",
      "209:\tlearn: 0.3688595\ttotal: 2.16s\tremaining: 8.11s\n",
      "210:\tlearn: 0.3687351\ttotal: 2.16s\tremaining: 8.1s\n",
      "211:\tlearn: 0.3685809\ttotal: 2.17s\tremaining: 8.08s\n",
      "212:\tlearn: 0.3685180\ttotal: 2.18s\tremaining: 8.06s\n",
      "213:\tlearn: 0.3683313\ttotal: 2.19s\tremaining: 8.05s\n",
      "214:\tlearn: 0.3682235\ttotal: 2.2s\tremaining: 8.03s\n",
      "215:\tlearn: 0.3681299\ttotal: 2.21s\tremaining: 8.02s\n",
      "216:\tlearn: 0.3676986\ttotal: 2.22s\tremaining: 8s\n",
      "217:\tlearn: 0.3675405\ttotal: 2.23s\tremaining: 7.99s\n",
      "218:\tlearn: 0.3673275\ttotal: 2.23s\tremaining: 7.97s\n",
      "219:\tlearn: 0.3672523\ttotal: 2.25s\tremaining: 7.96s\n",
      "220:\tlearn: 0.3671756\ttotal: 2.26s\tremaining: 7.96s\n",
      "221:\tlearn: 0.3670910\ttotal: 2.27s\tremaining: 7.95s\n",
      "222:\tlearn: 0.3669180\ttotal: 2.28s\tremaining: 7.94s\n",
      "223:\tlearn: 0.3668647\ttotal: 2.29s\tremaining: 7.93s\n",
      "224:\tlearn: 0.3667799\ttotal: 2.3s\tremaining: 7.91s\n",
      "225:\tlearn: 0.3666627\ttotal: 2.31s\tremaining: 7.9s\n",
      "226:\tlearn: 0.3664536\ttotal: 2.32s\tremaining: 7.89s\n",
      "227:\tlearn: 0.3663139\ttotal: 2.33s\tremaining: 7.87s\n",
      "228:\tlearn: 0.3661205\ttotal: 2.33s\tremaining: 7.86s\n",
      "229:\tlearn: 0.3659591\ttotal: 2.34s\tremaining: 7.84s\n",
      "230:\tlearn: 0.3658300\ttotal: 2.35s\tremaining: 7.83s\n",
      "231:\tlearn: 0.3657500\ttotal: 2.36s\tremaining: 7.82s\n",
      "232:\tlearn: 0.3654708\ttotal: 2.37s\tremaining: 7.8s\n",
      "233:\tlearn: 0.3653383\ttotal: 2.38s\tremaining: 7.79s\n",
      "234:\tlearn: 0.3652348\ttotal: 2.39s\tremaining: 7.77s\n",
      "235:\tlearn: 0.3650614\ttotal: 2.4s\tremaining: 7.76s\n",
      "236:\tlearn: 0.3650045\ttotal: 2.41s\tremaining: 7.75s\n",
      "237:\tlearn: 0.3649340\ttotal: 2.42s\tremaining: 7.73s\n",
      "238:\tlearn: 0.3648669\ttotal: 2.42s\tremaining: 7.72s\n",
      "239:\tlearn: 0.3647600\ttotal: 2.44s\tremaining: 7.71s\n",
      "240:\tlearn: 0.3646732\ttotal: 2.45s\tremaining: 7.71s\n",
      "241:\tlearn: 0.3644110\ttotal: 2.46s\tremaining: 7.7s\n",
      "242:\tlearn: 0.3643481\ttotal: 2.47s\tremaining: 7.69s\n",
      "243:\tlearn: 0.3642718\ttotal: 2.48s\tremaining: 7.68s\n",
      "244:\tlearn: 0.3642129\ttotal: 2.49s\tremaining: 7.66s\n",
      "245:\tlearn: 0.3641493\ttotal: 2.5s\tremaining: 7.65s\n",
      "246:\tlearn: 0.3640848\ttotal: 2.5s\tremaining: 7.64s\n",
      "247:\tlearn: 0.3638166\ttotal: 2.51s\tremaining: 7.62s\n",
      "248:\tlearn: 0.3636890\ttotal: 2.52s\tremaining: 7.61s\n",
      "249:\tlearn: 0.3636059\ttotal: 2.53s\tremaining: 7.59s\n",
      "250:\tlearn: 0.3635083\ttotal: 2.54s\tremaining: 7.58s\n",
      "251:\tlearn: 0.3634408\ttotal: 2.55s\tremaining: 7.57s\n",
      "252:\tlearn: 0.3633690\ttotal: 2.56s\tremaining: 7.55s\n",
      "253:\tlearn: 0.3632657\ttotal: 2.57s\tremaining: 7.54s\n",
      "254:\tlearn: 0.3631177\ttotal: 2.58s\tremaining: 7.53s\n",
      "255:\tlearn: 0.3630711\ttotal: 2.58s\tremaining: 7.51s\n",
      "256:\tlearn: 0.3629084\ttotal: 2.6s\tremaining: 7.51s\n",
      "257:\tlearn: 0.3628467\ttotal: 2.61s\tremaining: 7.5s\n",
      "258:\tlearn: 0.3627421\ttotal: 2.62s\tremaining: 7.5s\n",
      "259:\tlearn: 0.3626391\ttotal: 2.63s\tremaining: 7.49s\n",
      "260:\tlearn: 0.3625776\ttotal: 2.64s\tremaining: 7.47s\n",
      "261:\tlearn: 0.3625102\ttotal: 2.65s\tremaining: 7.46s\n",
      "262:\tlearn: 0.3623399\ttotal: 2.66s\tremaining: 7.45s\n",
      "263:\tlearn: 0.3622235\ttotal: 2.67s\tremaining: 7.43s\n",
      "264:\tlearn: 0.3620378\ttotal: 2.67s\tremaining: 7.42s\n",
      "265:\tlearn: 0.3619203\ttotal: 2.68s\tremaining: 7.41s\n",
      "266:\tlearn: 0.3617117\ttotal: 2.69s\tremaining: 7.39s\n",
      "267:\tlearn: 0.3614965\ttotal: 2.7s\tremaining: 7.38s\n",
      "268:\tlearn: 0.3614158\ttotal: 2.71s\tremaining: 7.37s\n",
      "269:\tlearn: 0.3613033\ttotal: 2.72s\tremaining: 7.36s\n",
      "270:\tlearn: 0.3612136\ttotal: 2.73s\tremaining: 7.34s\n",
      "271:\tlearn: 0.3609772\ttotal: 2.74s\tremaining: 7.33s\n",
      "272:\tlearn: 0.3608097\ttotal: 2.75s\tremaining: 7.32s\n",
      "273:\tlearn: 0.3606456\ttotal: 2.76s\tremaining: 7.3s\n",
      "274:\tlearn: 0.3605626\ttotal: 2.77s\tremaining: 7.29s\n",
      "275:\tlearn: 0.3603960\ttotal: 2.78s\tremaining: 7.28s\n",
      "276:\tlearn: 0.3602114\ttotal: 2.79s\tremaining: 7.28s\n",
      "277:\tlearn: 0.3601219\ttotal: 2.8s\tremaining: 7.27s\n",
      "278:\tlearn: 0.3599194\ttotal: 2.81s\tremaining: 7.26s\n",
      "279:\tlearn: 0.3598356\ttotal: 2.82s\tremaining: 7.25s\n",
      "280:\tlearn: 0.3597795\ttotal: 2.83s\tremaining: 7.23s\n",
      "281:\tlearn: 0.3596784\ttotal: 2.84s\tremaining: 7.22s\n",
      "282:\tlearn: 0.3596236\ttotal: 2.85s\tremaining: 7.21s\n",
      "283:\tlearn: 0.3595771\ttotal: 2.85s\tremaining: 7.2s\n",
      "284:\tlearn: 0.3594749\ttotal: 2.86s\tremaining: 7.18s\n",
      "285:\tlearn: 0.3593137\ttotal: 2.87s\tremaining: 7.17s\n",
      "286:\tlearn: 0.3592543\ttotal: 2.88s\tremaining: 7.16s\n",
      "287:\tlearn: 0.3591433\ttotal: 2.89s\tremaining: 7.15s\n",
      "288:\tlearn: 0.3590648\ttotal: 2.9s\tremaining: 7.13s\n",
      "289:\tlearn: 0.3590129\ttotal: 2.91s\tremaining: 7.12s\n",
      "290:\tlearn: 0.3589826\ttotal: 2.92s\tremaining: 7.11s\n",
      "291:\tlearn: 0.3589086\ttotal: 2.93s\tremaining: 7.1s\n",
      "292:\tlearn: 0.3588565\ttotal: 2.94s\tremaining: 7.08s\n",
      "293:\tlearn: 0.3587322\ttotal: 2.95s\tremaining: 7.08s\n",
      "294:\tlearn: 0.3585910\ttotal: 2.96s\tremaining: 7.07s\n",
      "295:\tlearn: 0.3585503\ttotal: 2.97s\tremaining: 7.06s\n",
      "296:\tlearn: 0.3584738\ttotal: 2.98s\tremaining: 7.06s\n",
      "297:\tlearn: 0.3583912\ttotal: 2.99s\tremaining: 7.04s\n",
      "298:\tlearn: 0.3581588\ttotal: 3s\tremaining: 7.04s\n",
      "299:\tlearn: 0.3580613\ttotal: 3.01s\tremaining: 7.02s\n",
      "300:\tlearn: 0.3579735\ttotal: 3.02s\tremaining: 7.01s\n",
      "301:\tlearn: 0.3579169\ttotal: 3.03s\tremaining: 7s\n",
      "302:\tlearn: 0.3578258\ttotal: 3.04s\tremaining: 6.98s\n",
      "303:\tlearn: 0.3577559\ttotal: 3.04s\tremaining: 6.97s\n",
      "304:\tlearn: 0.3576803\ttotal: 3.05s\tremaining: 6.96s\n",
      "305:\tlearn: 0.3576005\ttotal: 3.06s\tremaining: 6.95s\n",
      "306:\tlearn: 0.3575558\ttotal: 3.07s\tremaining: 6.93s\n",
      "307:\tlearn: 0.3575188\ttotal: 3.08s\tremaining: 6.92s\n",
      "308:\tlearn: 0.3574013\ttotal: 3.09s\tremaining: 6.91s\n",
      "309:\tlearn: 0.3573388\ttotal: 3.1s\tremaining: 6.9s\n",
      "310:\tlearn: 0.3572340\ttotal: 3.11s\tremaining: 6.89s\n",
      "311:\tlearn: 0.3570842\ttotal: 3.12s\tremaining: 6.88s\n",
      "312:\tlearn: 0.3570487\ttotal: 3.13s\tremaining: 6.88s\n",
      "313:\tlearn: 0.3569726\ttotal: 3.14s\tremaining: 6.87s\n",
      "314:\tlearn: 0.3569084\ttotal: 3.15s\tremaining: 6.86s\n",
      "315:\tlearn: 0.3568199\ttotal: 3.16s\tremaining: 6.85s\n",
      "316:\tlearn: 0.3566757\ttotal: 3.17s\tremaining: 6.84s\n",
      "317:\tlearn: 0.3566233\ttotal: 3.18s\tremaining: 6.83s\n",
      "318:\tlearn: 0.3564589\ttotal: 3.19s\tremaining: 6.81s\n",
      "319:\tlearn: 0.3563647\ttotal: 3.2s\tremaining: 6.8s\n",
      "320:\tlearn: 0.3563113\ttotal: 3.21s\tremaining: 6.79s\n",
      "321:\tlearn: 0.3562325\ttotal: 3.22s\tremaining: 6.78s\n",
      "322:\tlearn: 0.3561324\ttotal: 3.23s\tremaining: 6.76s\n",
      "323:\tlearn: 0.3559794\ttotal: 3.24s\tremaining: 6.75s\n",
      "324:\tlearn: 0.3558733\ttotal: 3.25s\tremaining: 6.74s\n",
      "325:\tlearn: 0.3556891\ttotal: 3.25s\tremaining: 6.73s\n",
      "326:\tlearn: 0.3556450\ttotal: 3.26s\tremaining: 6.72s\n",
      "327:\tlearn: 0.3555652\ttotal: 3.27s\tremaining: 6.7s\n",
      "328:\tlearn: 0.3554933\ttotal: 3.28s\tremaining: 6.69s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "329:\tlearn: 0.3553433\ttotal: 3.29s\tremaining: 6.68s\n",
      "330:\tlearn: 0.3552522\ttotal: 3.3s\tremaining: 6.68s\n",
      "331:\tlearn: 0.3551462\ttotal: 3.31s\tremaining: 6.67s\n",
      "332:\tlearn: 0.3550328\ttotal: 3.33s\tremaining: 6.66s\n",
      "333:\tlearn: 0.3548367\ttotal: 3.34s\tremaining: 6.65s\n",
      "334:\tlearn: 0.3548004\ttotal: 3.35s\tremaining: 6.64s\n",
      "335:\tlearn: 0.3546748\ttotal: 3.35s\tremaining: 6.63s\n",
      "336:\tlearn: 0.3545858\ttotal: 3.36s\tremaining: 6.62s\n",
      "337:\tlearn: 0.3545023\ttotal: 3.37s\tremaining: 6.61s\n",
      "338:\tlearn: 0.3544429\ttotal: 3.38s\tremaining: 6.59s\n",
      "339:\tlearn: 0.3543546\ttotal: 3.39s\tremaining: 6.58s\n",
      "340:\tlearn: 0.3542221\ttotal: 3.4s\tremaining: 6.57s\n",
      "341:\tlearn: 0.3541890\ttotal: 3.41s\tremaining: 6.56s\n",
      "342:\tlearn: 0.3541115\ttotal: 3.42s\tremaining: 6.55s\n",
      "343:\tlearn: 0.3539530\ttotal: 3.43s\tremaining: 6.53s\n",
      "344:\tlearn: 0.3538924\ttotal: 3.44s\tremaining: 6.52s\n",
      "345:\tlearn: 0.3538092\ttotal: 3.44s\tremaining: 6.51s\n",
      "346:\tlearn: 0.3537444\ttotal: 3.45s\tremaining: 6.5s\n",
      "347:\tlearn: 0.3536072\ttotal: 3.46s\tremaining: 6.49s\n",
      "348:\tlearn: 0.3535258\ttotal: 3.48s\tremaining: 6.48s\n",
      "349:\tlearn: 0.3534586\ttotal: 3.49s\tremaining: 6.48s\n",
      "350:\tlearn: 0.3533869\ttotal: 3.5s\tremaining: 6.46s\n",
      "351:\tlearn: 0.3532936\ttotal: 3.5s\tremaining: 6.45s\n",
      "352:\tlearn: 0.3531581\ttotal: 3.51s\tremaining: 6.44s\n",
      "353:\tlearn: 0.3531243\ttotal: 3.52s\tremaining: 6.43s\n",
      "354:\tlearn: 0.3530673\ttotal: 3.53s\tremaining: 6.42s\n",
      "355:\tlearn: 0.3529851\ttotal: 3.54s\tremaining: 6.41s\n",
      "356:\tlearn: 0.3528949\ttotal: 3.55s\tremaining: 6.4s\n",
      "357:\tlearn: 0.3528421\ttotal: 3.56s\tremaining: 6.38s\n",
      "358:\tlearn: 0.3527414\ttotal: 3.57s\tremaining: 6.37s\n",
      "359:\tlearn: 0.3526967\ttotal: 3.58s\tremaining: 6.37s\n",
      "360:\tlearn: 0.3526098\ttotal: 3.59s\tremaining: 6.36s\n",
      "361:\tlearn: 0.3525458\ttotal: 3.6s\tremaining: 6.35s\n",
      "362:\tlearn: 0.3524911\ttotal: 3.61s\tremaining: 6.34s\n",
      "363:\tlearn: 0.3524350\ttotal: 3.62s\tremaining: 6.33s\n",
      "364:\tlearn: 0.3523952\ttotal: 3.64s\tremaining: 6.33s\n",
      "365:\tlearn: 0.3522489\ttotal: 3.65s\tremaining: 6.33s\n",
      "366:\tlearn: 0.3520719\ttotal: 3.67s\tremaining: 6.32s\n",
      "367:\tlearn: 0.3519536\ttotal: 3.68s\tremaining: 6.31s\n",
      "368:\tlearn: 0.3518638\ttotal: 3.69s\tremaining: 6.31s\n",
      "369:\tlearn: 0.3517937\ttotal: 3.7s\tremaining: 6.3s\n",
      "370:\tlearn: 0.3516873\ttotal: 3.71s\tremaining: 6.29s\n",
      "371:\tlearn: 0.3514452\ttotal: 3.72s\tremaining: 6.28s\n",
      "372:\tlearn: 0.3513505\ttotal: 3.73s\tremaining: 6.28s\n",
      "373:\tlearn: 0.3511976\ttotal: 3.75s\tremaining: 6.27s\n",
      "374:\tlearn: 0.3508978\ttotal: 3.76s\tremaining: 6.26s\n",
      "375:\tlearn: 0.3508273\ttotal: 3.77s\tremaining: 6.25s\n",
      "376:\tlearn: 0.3507709\ttotal: 3.77s\tremaining: 6.24s\n",
      "377:\tlearn: 0.3504953\ttotal: 3.78s\tremaining: 6.23s\n",
      "378:\tlearn: 0.3504472\ttotal: 3.79s\tremaining: 6.21s\n",
      "379:\tlearn: 0.3502869\ttotal: 3.8s\tremaining: 6.2s\n",
      "380:\tlearn: 0.3501579\ttotal: 3.81s\tremaining: 6.2s\n",
      "381:\tlearn: 0.3500589\ttotal: 3.82s\tremaining: 6.19s\n",
      "382:\tlearn: 0.3499470\ttotal: 3.84s\tremaining: 6.18s\n",
      "383:\tlearn: 0.3498639\ttotal: 3.85s\tremaining: 6.17s\n",
      "384:\tlearn: 0.3497736\ttotal: 3.85s\tremaining: 6.16s\n",
      "385:\tlearn: 0.3497117\ttotal: 3.86s\tremaining: 6.15s\n",
      "386:\tlearn: 0.3496543\ttotal: 3.87s\tremaining: 6.13s\n",
      "387:\tlearn: 0.3495665\ttotal: 3.88s\tremaining: 6.12s\n",
      "388:\tlearn: 0.3494879\ttotal: 3.89s\tremaining: 6.11s\n",
      "389:\tlearn: 0.3493860\ttotal: 3.9s\tremaining: 6.1s\n",
      "390:\tlearn: 0.3492471\ttotal: 3.91s\tremaining: 6.09s\n",
      "391:\tlearn: 0.3491304\ttotal: 3.92s\tremaining: 6.08s\n",
      "392:\tlearn: 0.3490167\ttotal: 3.93s\tremaining: 6.07s\n",
      "393:\tlearn: 0.3488701\ttotal: 3.94s\tremaining: 6.06s\n",
      "394:\tlearn: 0.3487491\ttotal: 3.95s\tremaining: 6.04s\n",
      "395:\tlearn: 0.3486210\ttotal: 3.96s\tremaining: 6.03s\n",
      "396:\tlearn: 0.3485478\ttotal: 3.96s\tremaining: 6.02s\n",
      "397:\tlearn: 0.3484379\ttotal: 3.97s\tremaining: 6.01s\n",
      "398:\tlearn: 0.3483728\ttotal: 3.98s\tremaining: 6s\n",
      "399:\tlearn: 0.3482787\ttotal: 4s\tremaining: 5.99s\n",
      "400:\tlearn: 0.3481915\ttotal: 4.01s\tremaining: 5.99s\n",
      "401:\tlearn: 0.3481073\ttotal: 4.02s\tremaining: 5.98s\n",
      "402:\tlearn: 0.3480442\ttotal: 4.03s\tremaining: 5.96s\n",
      "403:\tlearn: 0.3479464\ttotal: 4.04s\tremaining: 5.95s\n",
      "404:\tlearn: 0.3478560\ttotal: 4.04s\tremaining: 5.94s\n",
      "405:\tlearn: 0.3477215\ttotal: 4.05s\tremaining: 5.93s\n",
      "406:\tlearn: 0.3474558\ttotal: 4.06s\tremaining: 5.92s\n",
      "407:\tlearn: 0.3472272\ttotal: 4.07s\tremaining: 5.91s\n",
      "408:\tlearn: 0.3470106\ttotal: 4.08s\tremaining: 5.9s\n",
      "409:\tlearn: 0.3469407\ttotal: 4.09s\tremaining: 5.88s\n",
      "410:\tlearn: 0.3468235\ttotal: 4.1s\tremaining: 5.87s\n",
      "411:\tlearn: 0.3467116\ttotal: 4.11s\tremaining: 5.86s\n",
      "412:\tlearn: 0.3465803\ttotal: 4.12s\tremaining: 5.85s\n",
      "413:\tlearn: 0.3463890\ttotal: 4.13s\tremaining: 5.84s\n",
      "414:\tlearn: 0.3462517\ttotal: 4.13s\tremaining: 5.83s\n",
      "415:\tlearn: 0.3461856\ttotal: 4.14s\tremaining: 5.82s\n",
      "416:\tlearn: 0.3460266\ttotal: 4.15s\tremaining: 5.81s\n",
      "417:\tlearn: 0.3459676\ttotal: 4.17s\tremaining: 5.8s\n",
      "418:\tlearn: 0.3458620\ttotal: 4.18s\tremaining: 5.79s\n",
      "419:\tlearn: 0.3457905\ttotal: 4.19s\tremaining: 5.78s\n",
      "420:\tlearn: 0.3457182\ttotal: 4.2s\tremaining: 5.77s\n",
      "421:\tlearn: 0.3455249\ttotal: 4.21s\tremaining: 5.76s\n",
      "422:\tlearn: 0.3454190\ttotal: 4.21s\tremaining: 5.75s\n",
      "423:\tlearn: 0.3453340\ttotal: 4.22s\tremaining: 5.74s\n",
      "424:\tlearn: 0.3452573\ttotal: 4.23s\tremaining: 5.73s\n",
      "425:\tlearn: 0.3451072\ttotal: 4.25s\tremaining: 5.72s\n",
      "426:\tlearn: 0.3449091\ttotal: 4.25s\tremaining: 5.71s\n",
      "427:\tlearn: 0.3448487\ttotal: 4.26s\tremaining: 5.7s\n",
      "428:\tlearn: 0.3446576\ttotal: 4.27s\tremaining: 5.69s\n",
      "429:\tlearn: 0.3446050\ttotal: 4.28s\tremaining: 5.67s\n",
      "430:\tlearn: 0.3445276\ttotal: 4.29s\tremaining: 5.66s\n",
      "431:\tlearn: 0.3443886\ttotal: 4.3s\tremaining: 5.65s\n",
      "432:\tlearn: 0.3442965\ttotal: 4.31s\tremaining: 5.64s\n",
      "433:\tlearn: 0.3441313\ttotal: 4.32s\tremaining: 5.63s\n",
      "434:\tlearn: 0.3439781\ttotal: 4.33s\tremaining: 5.62s\n",
      "435:\tlearn: 0.3438031\ttotal: 4.34s\tremaining: 5.61s\n",
      "436:\tlearn: 0.3437504\ttotal: 4.35s\tremaining: 5.61s\n",
      "437:\tlearn: 0.3436120\ttotal: 4.36s\tremaining: 5.59s\n",
      "438:\tlearn: 0.3435195\ttotal: 4.37s\tremaining: 5.58s\n",
      "439:\tlearn: 0.3431768\ttotal: 4.38s\tremaining: 5.57s\n",
      "440:\tlearn: 0.3430998\ttotal: 4.39s\tremaining: 5.56s\n",
      "441:\tlearn: 0.3430201\ttotal: 4.4s\tremaining: 5.55s\n",
      "442:\tlearn: 0.3429075\ttotal: 4.41s\tremaining: 5.54s\n",
      "443:\tlearn: 0.3428187\ttotal: 4.41s\tremaining: 5.53s\n",
      "444:\tlearn: 0.3426185\ttotal: 4.42s\tremaining: 5.52s\n",
      "445:\tlearn: 0.3424355\ttotal: 4.43s\tremaining: 5.5s\n",
      "446:\tlearn: 0.3423394\ttotal: 4.44s\tremaining: 5.49s\n",
      "447:\tlearn: 0.3421264\ttotal: 4.45s\tremaining: 5.48s\n",
      "448:\tlearn: 0.3420514\ttotal: 4.46s\tremaining: 5.47s\n",
      "449:\tlearn: 0.3419780\ttotal: 4.47s\tremaining: 5.46s\n",
      "450:\tlearn: 0.3419319\ttotal: 4.48s\tremaining: 5.45s\n",
      "451:\tlearn: 0.3418304\ttotal: 4.49s\tremaining: 5.44s\n",
      "452:\tlearn: 0.3417586\ttotal: 4.5s\tremaining: 5.43s\n",
      "453:\tlearn: 0.3416797\ttotal: 4.51s\tremaining: 5.42s\n",
      "454:\tlearn: 0.3415907\ttotal: 4.52s\tremaining: 5.41s\n",
      "455:\tlearn: 0.3415239\ttotal: 4.53s\tremaining: 5.41s\n",
      "456:\tlearn: 0.3414628\ttotal: 4.54s\tremaining: 5.39s\n",
      "457:\tlearn: 0.3413885\ttotal: 4.55s\tremaining: 5.38s\n",
      "458:\tlearn: 0.3412804\ttotal: 4.56s\tremaining: 5.37s\n",
      "459:\tlearn: 0.3412088\ttotal: 4.57s\tremaining: 5.36s\n",
      "460:\tlearn: 0.3410854\ttotal: 4.58s\tremaining: 5.35s\n",
      "461:\tlearn: 0.3409750\ttotal: 4.58s\tremaining: 5.34s\n",
      "462:\tlearn: 0.3409084\ttotal: 4.59s\tremaining: 5.33s\n",
      "463:\tlearn: 0.3407335\ttotal: 4.6s\tremaining: 5.32s\n",
      "464:\tlearn: 0.3405785\ttotal: 4.61s\tremaining: 5.31s\n",
      "465:\tlearn: 0.3405316\ttotal: 4.62s\tremaining: 5.29s\n",
      "466:\tlearn: 0.3403550\ttotal: 4.63s\tremaining: 5.28s\n",
      "467:\tlearn: 0.3401988\ttotal: 4.64s\tremaining: 5.27s\n",
      "468:\tlearn: 0.3401352\ttotal: 4.65s\tremaining: 5.26s\n",
      "469:\tlearn: 0.3400595\ttotal: 4.66s\tremaining: 5.25s\n",
      "470:\tlearn: 0.3399703\ttotal: 4.67s\tremaining: 5.24s\n",
      "471:\tlearn: 0.3398986\ttotal: 4.68s\tremaining: 5.23s\n",
      "472:\tlearn: 0.3397685\ttotal: 4.69s\tremaining: 5.22s\n",
      "473:\tlearn: 0.3395432\ttotal: 4.7s\tremaining: 5.22s\n",
      "474:\tlearn: 0.3393674\ttotal: 4.71s\tremaining: 5.21s\n",
      "475:\tlearn: 0.3392146\ttotal: 4.72s\tremaining: 5.2s\n",
      "476:\tlearn: 0.3391087\ttotal: 4.73s\tremaining: 5.18s\n",
      "477:\tlearn: 0.3390371\ttotal: 4.74s\tremaining: 5.17s\n",
      "478:\tlearn: 0.3389361\ttotal: 4.75s\tremaining: 5.16s\n",
      "479:\tlearn: 0.3388526\ttotal: 4.76s\tremaining: 5.15s\n",
      "480:\tlearn: 0.3387984\ttotal: 4.76s\tremaining: 5.14s\n",
      "481:\tlearn: 0.3386385\ttotal: 4.77s\tremaining: 5.13s\n",
      "482:\tlearn: 0.3384909\ttotal: 4.78s\tremaining: 5.12s\n",
      "483:\tlearn: 0.3384274\ttotal: 4.79s\tremaining: 5.11s\n",
      "484:\tlearn: 0.3382618\ttotal: 4.8s\tremaining: 5.1s\n",
      "485:\tlearn: 0.3381648\ttotal: 4.81s\tremaining: 5.09s\n",
      "486:\tlearn: 0.3381029\ttotal: 4.82s\tremaining: 5.08s\n",
      "487:\tlearn: 0.3379472\ttotal: 4.83s\tremaining: 5.07s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "488:\tlearn: 0.3377971\ttotal: 4.84s\tremaining: 5.06s\n",
      "489:\tlearn: 0.3377001\ttotal: 4.85s\tremaining: 5.05s\n",
      "490:\tlearn: 0.3375474\ttotal: 4.86s\tremaining: 5.04s\n",
      "491:\tlearn: 0.3374799\ttotal: 4.87s\tremaining: 5.03s\n",
      "492:\tlearn: 0.3374177\ttotal: 4.88s\tremaining: 5.02s\n",
      "493:\tlearn: 0.3373359\ttotal: 4.89s\tremaining: 5.01s\n",
      "494:\tlearn: 0.3371915\ttotal: 4.9s\tremaining: 5s\n",
      "495:\tlearn: 0.3371368\ttotal: 4.91s\tremaining: 4.99s\n",
      "496:\tlearn: 0.3370829\ttotal: 4.92s\tremaining: 4.98s\n",
      "497:\tlearn: 0.3369012\ttotal: 4.93s\tremaining: 4.97s\n",
      "498:\tlearn: 0.3368160\ttotal: 4.94s\tremaining: 4.96s\n",
      "499:\tlearn: 0.3367606\ttotal: 4.95s\tremaining: 4.95s\n",
      "500:\tlearn: 0.3366070\ttotal: 4.96s\tremaining: 4.93s\n",
      "501:\tlearn: 0.3364647\ttotal: 4.96s\tremaining: 4.92s\n",
      "502:\tlearn: 0.3363113\ttotal: 4.97s\tremaining: 4.91s\n",
      "503:\tlearn: 0.3362585\ttotal: 4.98s\tremaining: 4.9s\n",
      "504:\tlearn: 0.3362006\ttotal: 4.99s\tremaining: 4.89s\n",
      "505:\tlearn: 0.3360913\ttotal: 5s\tremaining: 4.88s\n",
      "506:\tlearn: 0.3360362\ttotal: 5.01s\tremaining: 4.87s\n",
      "507:\tlearn: 0.3358981\ttotal: 5.02s\tremaining: 4.86s\n",
      "508:\tlearn: 0.3358245\ttotal: 5.03s\tremaining: 4.85s\n",
      "509:\tlearn: 0.3357023\ttotal: 5.04s\tremaining: 4.84s\n",
      "510:\tlearn: 0.3356253\ttotal: 5.05s\tremaining: 4.83s\n",
      "511:\tlearn: 0.3355302\ttotal: 5.06s\tremaining: 4.82s\n",
      "512:\tlearn: 0.3354228\ttotal: 5.07s\tremaining: 4.81s\n",
      "513:\tlearn: 0.3353434\ttotal: 5.08s\tremaining: 4.8s\n",
      "514:\tlearn: 0.3352519\ttotal: 5.09s\tremaining: 4.79s\n",
      "515:\tlearn: 0.3351097\ttotal: 5.1s\tremaining: 4.78s\n",
      "516:\tlearn: 0.3350414\ttotal: 5.11s\tremaining: 4.77s\n",
      "517:\tlearn: 0.3350032\ttotal: 5.11s\tremaining: 4.76s\n",
      "518:\tlearn: 0.3349296\ttotal: 5.12s\tremaining: 4.75s\n",
      "519:\tlearn: 0.3347960\ttotal: 5.13s\tremaining: 4.74s\n",
      "520:\tlearn: 0.3347201\ttotal: 5.14s\tremaining: 4.73s\n",
      "521:\tlearn: 0.3345989\ttotal: 5.15s\tremaining: 4.71s\n",
      "522:\tlearn: 0.3345461\ttotal: 5.16s\tremaining: 4.7s\n",
      "523:\tlearn: 0.3344771\ttotal: 5.17s\tremaining: 4.69s\n",
      "524:\tlearn: 0.3344301\ttotal: 5.18s\tremaining: 4.68s\n",
      "525:\tlearn: 0.3343109\ttotal: 5.19s\tremaining: 4.67s\n",
      "526:\tlearn: 0.3342377\ttotal: 5.2s\tremaining: 4.67s\n",
      "527:\tlearn: 0.3341547\ttotal: 5.21s\tremaining: 4.66s\n",
      "528:\tlearn: 0.3340417\ttotal: 5.22s\tremaining: 4.65s\n",
      "529:\tlearn: 0.3338765\ttotal: 5.23s\tremaining: 4.64s\n",
      "530:\tlearn: 0.3338160\ttotal: 5.24s\tremaining: 4.63s\n",
      "531:\tlearn: 0.3337476\ttotal: 5.25s\tremaining: 4.62s\n",
      "532:\tlearn: 0.3336912\ttotal: 5.25s\tremaining: 4.61s\n",
      "533:\tlearn: 0.3336222\ttotal: 5.26s\tremaining: 4.59s\n",
      "534:\tlearn: 0.3334450\ttotal: 5.28s\tremaining: 4.58s\n",
      "535:\tlearn: 0.3333942\ttotal: 5.28s\tremaining: 4.57s\n",
      "536:\tlearn: 0.3333381\ttotal: 5.29s\tremaining: 4.56s\n",
      "537:\tlearn: 0.3332661\ttotal: 5.3s\tremaining: 4.55s\n",
      "538:\tlearn: 0.3332098\ttotal: 5.31s\tremaining: 4.54s\n",
      "539:\tlearn: 0.3330506\ttotal: 5.32s\tremaining: 4.53s\n",
      "540:\tlearn: 0.3329731\ttotal: 5.33s\tremaining: 4.52s\n",
      "541:\tlearn: 0.3329194\ttotal: 5.34s\tremaining: 4.51s\n",
      "542:\tlearn: 0.3328491\ttotal: 5.35s\tremaining: 4.5s\n",
      "543:\tlearn: 0.3327515\ttotal: 5.36s\tremaining: 4.49s\n",
      "544:\tlearn: 0.3326606\ttotal: 5.37s\tremaining: 4.48s\n",
      "545:\tlearn: 0.3325371\ttotal: 5.38s\tremaining: 4.47s\n",
      "546:\tlearn: 0.3324337\ttotal: 5.39s\tremaining: 4.46s\n",
      "547:\tlearn: 0.3323911\ttotal: 5.4s\tremaining: 4.45s\n",
      "548:\tlearn: 0.3323578\ttotal: 5.41s\tremaining: 4.44s\n",
      "549:\tlearn: 0.3322866\ttotal: 5.42s\tremaining: 4.43s\n",
      "550:\tlearn: 0.3321949\ttotal: 5.43s\tremaining: 4.42s\n",
      "551:\tlearn: 0.3321180\ttotal: 5.43s\tremaining: 4.41s\n",
      "552:\tlearn: 0.3320303\ttotal: 5.44s\tremaining: 4.4s\n",
      "553:\tlearn: 0.3319885\ttotal: 5.45s\tremaining: 4.39s\n",
      "554:\tlearn: 0.3319081\ttotal: 5.46s\tremaining: 4.38s\n",
      "555:\tlearn: 0.3318435\ttotal: 5.47s\tremaining: 4.37s\n",
      "556:\tlearn: 0.3317245\ttotal: 5.48s\tremaining: 4.36s\n",
      "557:\tlearn: 0.3315849\ttotal: 5.49s\tremaining: 4.35s\n",
      "558:\tlearn: 0.3315361\ttotal: 5.5s\tremaining: 4.34s\n",
      "559:\tlearn: 0.3314166\ttotal: 5.51s\tremaining: 4.33s\n",
      "560:\tlearn: 0.3313504\ttotal: 5.51s\tremaining: 4.32s\n",
      "561:\tlearn: 0.3312460\ttotal: 5.52s\tremaining: 4.3s\n",
      "562:\tlearn: 0.3312138\ttotal: 5.54s\tremaining: 4.3s\n",
      "563:\tlearn: 0.3311016\ttotal: 5.55s\tremaining: 4.29s\n",
      "564:\tlearn: 0.3310643\ttotal: 5.56s\tremaining: 4.28s\n",
      "565:\tlearn: 0.3310025\ttotal: 5.57s\tremaining: 4.27s\n",
      "566:\tlearn: 0.3309498\ttotal: 5.58s\tremaining: 4.26s\n",
      "567:\tlearn: 0.3308910\ttotal: 5.58s\tremaining: 4.25s\n",
      "568:\tlearn: 0.3307960\ttotal: 5.59s\tremaining: 4.24s\n",
      "569:\tlearn: 0.3307311\ttotal: 5.6s\tremaining: 4.23s\n",
      "570:\tlearn: 0.3306171\ttotal: 5.61s\tremaining: 4.22s\n",
      "571:\tlearn: 0.3305809\ttotal: 5.62s\tremaining: 4.21s\n",
      "572:\tlearn: 0.3304953\ttotal: 5.63s\tremaining: 4.2s\n",
      "573:\tlearn: 0.3304354\ttotal: 5.64s\tremaining: 4.18s\n",
      "574:\tlearn: 0.3302456\ttotal: 5.65s\tremaining: 4.17s\n",
      "575:\tlearn: 0.3301710\ttotal: 5.66s\tremaining: 4.16s\n",
      "576:\tlearn: 0.3300965\ttotal: 5.67s\tremaining: 4.15s\n",
      "577:\tlearn: 0.3299994\ttotal: 5.67s\tremaining: 4.14s\n",
      "578:\tlearn: 0.3299298\ttotal: 5.68s\tremaining: 4.13s\n",
      "579:\tlearn: 0.3298612\ttotal: 5.69s\tremaining: 4.12s\n",
      "580:\tlearn: 0.3298304\ttotal: 5.7s\tremaining: 4.11s\n",
      "581:\tlearn: 0.3297016\ttotal: 5.71s\tremaining: 4.1s\n",
      "582:\tlearn: 0.3296521\ttotal: 5.72s\tremaining: 4.09s\n",
      "583:\tlearn: 0.3295770\ttotal: 5.74s\tremaining: 4.09s\n",
      "584:\tlearn: 0.3294756\ttotal: 5.75s\tremaining: 4.08s\n",
      "585:\tlearn: 0.3294490\ttotal: 5.76s\tremaining: 4.07s\n",
      "586:\tlearn: 0.3293675\ttotal: 5.76s\tremaining: 4.06s\n",
      "587:\tlearn: 0.3292509\ttotal: 5.77s\tremaining: 4.05s\n",
      "588:\tlearn: 0.3291577\ttotal: 5.78s\tremaining: 4.04s\n",
      "589:\tlearn: 0.3290965\ttotal: 5.79s\tremaining: 4.03s\n",
      "590:\tlearn: 0.3289522\ttotal: 5.8s\tremaining: 4.01s\n",
      "591:\tlearn: 0.3288797\ttotal: 5.81s\tremaining: 4s\n",
      "592:\tlearn: 0.3287445\ttotal: 5.82s\tremaining: 3.99s\n",
      "593:\tlearn: 0.3286472\ttotal: 5.83s\tremaining: 3.98s\n",
      "594:\tlearn: 0.3285201\ttotal: 5.84s\tremaining: 3.97s\n",
      "595:\tlearn: 0.3284584\ttotal: 5.85s\tremaining: 3.96s\n",
      "596:\tlearn: 0.3283779\ttotal: 5.86s\tremaining: 3.95s\n",
      "597:\tlearn: 0.3282805\ttotal: 5.86s\tremaining: 3.94s\n",
      "598:\tlearn: 0.3281308\ttotal: 5.88s\tremaining: 3.93s\n",
      "599:\tlearn: 0.3280715\ttotal: 5.89s\tremaining: 3.92s\n",
      "600:\tlearn: 0.3279968\ttotal: 5.9s\tremaining: 3.92s\n",
      "601:\tlearn: 0.3279371\ttotal: 5.91s\tremaining: 3.91s\n",
      "602:\tlearn: 0.3278214\ttotal: 5.92s\tremaining: 3.9s\n",
      "603:\tlearn: 0.3277582\ttotal: 5.93s\tremaining: 3.88s\n",
      "604:\tlearn: 0.3276697\ttotal: 5.93s\tremaining: 3.88s\n",
      "605:\tlearn: 0.3276283\ttotal: 5.94s\tremaining: 3.86s\n",
      "606:\tlearn: 0.3275565\ttotal: 5.95s\tremaining: 3.85s\n",
      "607:\tlearn: 0.3274980\ttotal: 5.96s\tremaining: 3.84s\n",
      "608:\tlearn: 0.3274338\ttotal: 5.97s\tremaining: 3.83s\n",
      "609:\tlearn: 0.3273462\ttotal: 5.98s\tremaining: 3.82s\n",
      "610:\tlearn: 0.3272485\ttotal: 5.99s\tremaining: 3.81s\n",
      "611:\tlearn: 0.3271919\ttotal: 6s\tremaining: 3.8s\n",
      "612:\tlearn: 0.3271085\ttotal: 6.01s\tremaining: 3.79s\n",
      "613:\tlearn: 0.3269961\ttotal: 6.01s\tremaining: 3.78s\n",
      "614:\tlearn: 0.3268993\ttotal: 6.02s\tremaining: 3.77s\n",
      "615:\tlearn: 0.3268271\ttotal: 6.03s\tremaining: 3.76s\n",
      "616:\tlearn: 0.3267000\ttotal: 6.04s\tremaining: 3.75s\n",
      "617:\tlearn: 0.3266244\ttotal: 6.05s\tremaining: 3.74s\n",
      "618:\tlearn: 0.3265719\ttotal: 6.07s\tremaining: 3.73s\n",
      "619:\tlearn: 0.3264963\ttotal: 6.08s\tremaining: 3.72s\n",
      "620:\tlearn: 0.3264330\ttotal: 6.09s\tremaining: 3.71s\n",
      "621:\tlearn: 0.3262443\ttotal: 6.1s\tremaining: 3.71s\n",
      "622:\tlearn: 0.3261726\ttotal: 6.11s\tremaining: 3.69s\n",
      "623:\tlearn: 0.3260985\ttotal: 6.12s\tremaining: 3.69s\n",
      "624:\tlearn: 0.3260473\ttotal: 6.12s\tremaining: 3.67s\n",
      "625:\tlearn: 0.3259737\ttotal: 6.13s\tremaining: 3.66s\n",
      "626:\tlearn: 0.3259104\ttotal: 6.14s\tremaining: 3.65s\n",
      "627:\tlearn: 0.3258615\ttotal: 6.15s\tremaining: 3.64s\n",
      "628:\tlearn: 0.3258309\ttotal: 6.16s\tremaining: 3.63s\n",
      "629:\tlearn: 0.3257321\ttotal: 6.17s\tremaining: 3.62s\n",
      "630:\tlearn: 0.3256570\ttotal: 6.18s\tremaining: 3.61s\n",
      "631:\tlearn: 0.3256147\ttotal: 6.19s\tremaining: 3.6s\n",
      "632:\tlearn: 0.3255541\ttotal: 6.2s\tremaining: 3.59s\n",
      "633:\tlearn: 0.3254880\ttotal: 6.2s\tremaining: 3.58s\n",
      "634:\tlearn: 0.3254376\ttotal: 6.21s\tremaining: 3.57s\n",
      "635:\tlearn: 0.3253688\ttotal: 6.22s\tremaining: 3.56s\n",
      "636:\tlearn: 0.3252756\ttotal: 6.24s\tremaining: 3.55s\n",
      "637:\tlearn: 0.3252188\ttotal: 6.25s\tremaining: 3.54s\n",
      "638:\tlearn: 0.3251249\ttotal: 6.26s\tremaining: 3.54s\n",
      "639:\tlearn: 0.3250760\ttotal: 6.27s\tremaining: 3.52s\n",
      "640:\tlearn: 0.3250206\ttotal: 6.28s\tremaining: 3.52s\n",
      "641:\tlearn: 0.3249630\ttotal: 6.29s\tremaining: 3.5s\n",
      "642:\tlearn: 0.3249079\ttotal: 6.29s\tremaining: 3.5s\n",
      "643:\tlearn: 0.3247992\ttotal: 6.3s\tremaining: 3.48s\n",
      "644:\tlearn: 0.3247660\ttotal: 6.31s\tremaining: 3.47s\n",
      "645:\tlearn: 0.3246969\ttotal: 6.32s\tremaining: 3.46s\n",
      "646:\tlearn: 0.3246102\ttotal: 6.33s\tremaining: 3.45s\n",
      "647:\tlearn: 0.3245669\ttotal: 6.34s\tremaining: 3.44s\n",
      "648:\tlearn: 0.3244899\ttotal: 6.35s\tremaining: 3.43s\n",
      "649:\tlearn: 0.3244437\ttotal: 6.36s\tremaining: 3.42s\n",
      "650:\tlearn: 0.3244025\ttotal: 6.37s\tremaining: 3.41s\n",
      "651:\tlearn: 0.3243500\ttotal: 6.38s\tremaining: 3.4s\n",
      "652:\tlearn: 0.3242801\ttotal: 6.38s\tremaining: 3.39s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "653:\tlearn: 0.3242205\ttotal: 6.39s\tremaining: 3.38s\n",
      "654:\tlearn: 0.3241940\ttotal: 6.41s\tremaining: 3.37s\n",
      "655:\tlearn: 0.3241262\ttotal: 6.42s\tremaining: 3.37s\n",
      "656:\tlearn: 0.3240303\ttotal: 6.43s\tremaining: 3.36s\n",
      "657:\tlearn: 0.3240029\ttotal: 6.44s\tremaining: 3.35s\n",
      "658:\tlearn: 0.3239368\ttotal: 6.45s\tremaining: 3.34s\n",
      "659:\tlearn: 0.3238904\ttotal: 6.46s\tremaining: 3.33s\n",
      "660:\tlearn: 0.3238344\ttotal: 6.47s\tremaining: 3.32s\n",
      "661:\tlearn: 0.3237725\ttotal: 6.47s\tremaining: 3.31s\n",
      "662:\tlearn: 0.3236766\ttotal: 6.48s\tremaining: 3.3s\n",
      "663:\tlearn: 0.3236295\ttotal: 6.49s\tremaining: 3.29s\n",
      "664:\tlearn: 0.3235967\ttotal: 6.5s\tremaining: 3.27s\n",
      "665:\tlearn: 0.3235468\ttotal: 6.51s\tremaining: 3.27s\n",
      "666:\tlearn: 0.3235002\ttotal: 6.52s\tremaining: 3.25s\n",
      "667:\tlearn: 0.3234232\ttotal: 6.53s\tremaining: 3.24s\n",
      "668:\tlearn: 0.3233530\ttotal: 6.54s\tremaining: 3.23s\n",
      "669:\tlearn: 0.3232863\ttotal: 6.55s\tremaining: 3.22s\n",
      "670:\tlearn: 0.3231990\ttotal: 6.55s\tremaining: 3.21s\n",
      "671:\tlearn: 0.3230492\ttotal: 6.56s\tremaining: 3.2s\n",
      "672:\tlearn: 0.3230072\ttotal: 6.58s\tremaining: 3.19s\n",
      "673:\tlearn: 0.3229596\ttotal: 6.59s\tremaining: 3.19s\n",
      "674:\tlearn: 0.3229203\ttotal: 6.6s\tremaining: 3.18s\n",
      "675:\tlearn: 0.3228548\ttotal: 6.61s\tremaining: 3.17s\n",
      "676:\tlearn: 0.3227698\ttotal: 6.62s\tremaining: 3.16s\n",
      "677:\tlearn: 0.3227251\ttotal: 6.63s\tremaining: 3.15s\n",
      "678:\tlearn: 0.3226537\ttotal: 6.64s\tremaining: 3.14s\n",
      "679:\tlearn: 0.3226165\ttotal: 6.65s\tremaining: 3.13s\n",
      "680:\tlearn: 0.3225355\ttotal: 6.67s\tremaining: 3.12s\n",
      "681:\tlearn: 0.3224471\ttotal: 6.68s\tremaining: 3.11s\n",
      "682:\tlearn: 0.3223882\ttotal: 6.69s\tremaining: 3.1s\n",
      "683:\tlearn: 0.3223264\ttotal: 6.71s\tremaining: 3.1s\n",
      "684:\tlearn: 0.3222392\ttotal: 6.71s\tremaining: 3.09s\n",
      "685:\tlearn: 0.3221722\ttotal: 6.72s\tremaining: 3.08s\n",
      "686:\tlearn: 0.3220832\ttotal: 6.74s\tremaining: 3.07s\n",
      "687:\tlearn: 0.3220230\ttotal: 6.75s\tremaining: 3.06s\n",
      "688:\tlearn: 0.3219600\ttotal: 6.76s\tremaining: 3.05s\n",
      "689:\tlearn: 0.3218861\ttotal: 6.77s\tremaining: 3.04s\n",
      "690:\tlearn: 0.3218159\ttotal: 6.78s\tremaining: 3.03s\n",
      "691:\tlearn: 0.3217586\ttotal: 6.79s\tremaining: 3.02s\n",
      "692:\tlearn: 0.3216862\ttotal: 6.8s\tremaining: 3.01s\n",
      "693:\tlearn: 0.3216518\ttotal: 6.81s\tremaining: 3s\n",
      "694:\tlearn: 0.3215986\ttotal: 6.82s\tremaining: 2.99s\n",
      "695:\tlearn: 0.3215351\ttotal: 6.83s\tremaining: 2.98s\n",
      "696:\tlearn: 0.3214485\ttotal: 6.85s\tremaining: 2.98s\n",
      "697:\tlearn: 0.3213281\ttotal: 6.86s\tremaining: 2.97s\n",
      "698:\tlearn: 0.3212808\ttotal: 6.87s\tremaining: 2.96s\n",
      "699:\tlearn: 0.3211932\ttotal: 6.89s\tremaining: 2.95s\n",
      "700:\tlearn: 0.3211420\ttotal: 6.9s\tremaining: 2.94s\n",
      "701:\tlearn: 0.3210044\ttotal: 6.91s\tremaining: 2.93s\n",
      "702:\tlearn: 0.3209737\ttotal: 6.92s\tremaining: 2.92s\n",
      "703:\tlearn: 0.3209139\ttotal: 6.93s\tremaining: 2.92s\n",
      "704:\tlearn: 0.3208239\ttotal: 6.95s\tremaining: 2.91s\n",
      "705:\tlearn: 0.3206605\ttotal: 6.96s\tremaining: 2.9s\n",
      "706:\tlearn: 0.3206142\ttotal: 6.97s\tremaining: 2.89s\n",
      "707:\tlearn: 0.3205784\ttotal: 6.98s\tremaining: 2.88s\n",
      "708:\tlearn: 0.3204867\ttotal: 6.99s\tremaining: 2.87s\n",
      "709:\tlearn: 0.3204324\ttotal: 7s\tremaining: 2.86s\n",
      "710:\tlearn: 0.3203453\ttotal: 7s\tremaining: 2.85s\n",
      "711:\tlearn: 0.3202829\ttotal: 7.01s\tremaining: 2.84s\n",
      "712:\tlearn: 0.3202364\ttotal: 7.02s\tremaining: 2.83s\n",
      "713:\tlearn: 0.3201511\ttotal: 7.03s\tremaining: 2.82s\n",
      "714:\tlearn: 0.3200933\ttotal: 7.04s\tremaining: 2.81s\n",
      "715:\tlearn: 0.3200006\ttotal: 7.05s\tremaining: 2.8s\n",
      "716:\tlearn: 0.3199537\ttotal: 7.06s\tremaining: 2.79s\n",
      "717:\tlearn: 0.3199200\ttotal: 7.07s\tremaining: 2.77s\n",
      "718:\tlearn: 0.3198382\ttotal: 7.08s\tremaining: 2.77s\n",
      "719:\tlearn: 0.3198055\ttotal: 7.09s\tremaining: 2.76s\n",
      "720:\tlearn: 0.3197511\ttotal: 7.1s\tremaining: 2.75s\n",
      "721:\tlearn: 0.3197171\ttotal: 7.11s\tremaining: 2.74s\n",
      "722:\tlearn: 0.3196769\ttotal: 7.12s\tremaining: 2.73s\n",
      "723:\tlearn: 0.3196399\ttotal: 7.13s\tremaining: 2.72s\n",
      "724:\tlearn: 0.3196176\ttotal: 7.14s\tremaining: 2.71s\n",
      "725:\tlearn: 0.3195666\ttotal: 7.15s\tremaining: 2.7s\n",
      "726:\tlearn: 0.3194646\ttotal: 7.16s\tremaining: 2.69s\n",
      "727:\tlearn: 0.3193968\ttotal: 7.16s\tremaining: 2.68s\n",
      "728:\tlearn: 0.3193749\ttotal: 7.17s\tremaining: 2.67s\n",
      "729:\tlearn: 0.3193121\ttotal: 7.18s\tremaining: 2.66s\n",
      "730:\tlearn: 0.3192582\ttotal: 7.19s\tremaining: 2.65s\n",
      "731:\tlearn: 0.3192197\ttotal: 7.2s\tremaining: 2.64s\n",
      "732:\tlearn: 0.3191830\ttotal: 7.21s\tremaining: 2.63s\n",
      "733:\tlearn: 0.3191284\ttotal: 7.22s\tremaining: 2.62s\n",
      "734:\tlearn: 0.3190814\ttotal: 7.23s\tremaining: 2.61s\n",
      "735:\tlearn: 0.3190429\ttotal: 7.24s\tremaining: 2.6s\n",
      "736:\tlearn: 0.3189462\ttotal: 7.25s\tremaining: 2.59s\n",
      "737:\tlearn: 0.3188478\ttotal: 7.26s\tremaining: 2.58s\n",
      "738:\tlearn: 0.3187897\ttotal: 7.27s\tremaining: 2.57s\n",
      "739:\tlearn: 0.3187255\ttotal: 7.28s\tremaining: 2.56s\n",
      "740:\tlearn: 0.3186764\ttotal: 7.29s\tremaining: 2.55s\n",
      "741:\tlearn: 0.3186231\ttotal: 7.3s\tremaining: 2.54s\n",
      "742:\tlearn: 0.3185898\ttotal: 7.31s\tremaining: 2.53s\n",
      "743:\tlearn: 0.3185560\ttotal: 7.32s\tremaining: 2.52s\n",
      "744:\tlearn: 0.3184638\ttotal: 7.33s\tremaining: 2.51s\n",
      "745:\tlearn: 0.3183794\ttotal: 7.34s\tremaining: 2.5s\n",
      "746:\tlearn: 0.3183266\ttotal: 7.35s\tremaining: 2.49s\n",
      "747:\tlearn: 0.3182651\ttotal: 7.36s\tremaining: 2.48s\n",
      "748:\tlearn: 0.3182412\ttotal: 7.37s\tremaining: 2.47s\n",
      "749:\tlearn: 0.3182181\ttotal: 7.37s\tremaining: 2.46s\n",
      "750:\tlearn: 0.3181072\ttotal: 7.38s\tremaining: 2.45s\n",
      "751:\tlearn: 0.3180334\ttotal: 7.39s\tremaining: 2.44s\n",
      "752:\tlearn: 0.3179835\ttotal: 7.4s\tremaining: 2.43s\n",
      "753:\tlearn: 0.3179505\ttotal: 7.41s\tremaining: 2.42s\n",
      "754:\tlearn: 0.3179004\ttotal: 7.42s\tremaining: 2.41s\n",
      "755:\tlearn: 0.3178310\ttotal: 7.43s\tremaining: 2.4s\n",
      "756:\tlearn: 0.3177712\ttotal: 7.44s\tremaining: 2.39s\n",
      "757:\tlearn: 0.3176819\ttotal: 7.45s\tremaining: 2.38s\n",
      "758:\tlearn: 0.3176115\ttotal: 7.46s\tremaining: 2.37s\n",
      "759:\tlearn: 0.3175614\ttotal: 7.47s\tremaining: 2.36s\n",
      "760:\tlearn: 0.3175231\ttotal: 7.48s\tremaining: 2.35s\n",
      "761:\tlearn: 0.3174468\ttotal: 7.49s\tremaining: 2.34s\n",
      "762:\tlearn: 0.3174205\ttotal: 7.5s\tremaining: 2.33s\n",
      "763:\tlearn: 0.3173609\ttotal: 7.51s\tremaining: 2.32s\n",
      "764:\tlearn: 0.3173217\ttotal: 7.52s\tremaining: 2.31s\n",
      "765:\tlearn: 0.3172876\ttotal: 7.53s\tremaining: 2.3s\n",
      "766:\tlearn: 0.3171994\ttotal: 7.54s\tremaining: 2.29s\n",
      "767:\tlearn: 0.3171728\ttotal: 7.54s\tremaining: 2.28s\n",
      "768:\tlearn: 0.3170877\ttotal: 7.55s\tremaining: 2.27s\n",
      "769:\tlearn: 0.3170397\ttotal: 7.56s\tremaining: 2.26s\n",
      "770:\tlearn: 0.3170116\ttotal: 7.57s\tremaining: 2.25s\n",
      "771:\tlearn: 0.3169861\ttotal: 7.58s\tremaining: 2.24s\n",
      "772:\tlearn: 0.3169294\ttotal: 7.59s\tremaining: 2.23s\n",
      "773:\tlearn: 0.3168622\ttotal: 7.6s\tremaining: 2.22s\n",
      "774:\tlearn: 0.3167738\ttotal: 7.61s\tremaining: 2.21s\n",
      "775:\tlearn: 0.3166893\ttotal: 7.62s\tremaining: 2.2s\n",
      "776:\tlearn: 0.3165825\ttotal: 7.65s\tremaining: 2.19s\n",
      "777:\tlearn: 0.3165041\ttotal: 7.67s\tremaining: 2.19s\n",
      "778:\tlearn: 0.3164475\ttotal: 7.68s\tremaining: 2.18s\n",
      "779:\tlearn: 0.3163929\ttotal: 7.69s\tremaining: 2.17s\n",
      "780:\tlearn: 0.3163222\ttotal: 7.7s\tremaining: 2.16s\n",
      "781:\tlearn: 0.3162952\ttotal: 7.71s\tremaining: 2.15s\n",
      "782:\tlearn: 0.3162605\ttotal: 7.72s\tremaining: 2.14s\n",
      "783:\tlearn: 0.3162311\ttotal: 7.73s\tremaining: 2.13s\n",
      "784:\tlearn: 0.3161834\ttotal: 7.74s\tremaining: 2.12s\n",
      "785:\tlearn: 0.3161363\ttotal: 7.75s\tremaining: 2.11s\n",
      "786:\tlearn: 0.3160812\ttotal: 7.76s\tremaining: 2.1s\n",
      "787:\tlearn: 0.3160535\ttotal: 7.77s\tremaining: 2.09s\n",
      "788:\tlearn: 0.3159873\ttotal: 7.78s\tremaining: 2.08s\n",
      "789:\tlearn: 0.3159501\ttotal: 7.79s\tremaining: 2.07s\n",
      "790:\tlearn: 0.3158879\ttotal: 7.8s\tremaining: 2.06s\n",
      "791:\tlearn: 0.3158142\ttotal: 7.81s\tremaining: 2.05s\n",
      "792:\tlearn: 0.3157421\ttotal: 7.82s\tremaining: 2.04s\n",
      "793:\tlearn: 0.3157152\ttotal: 7.83s\tremaining: 2.03s\n",
      "794:\tlearn: 0.3156668\ttotal: 7.84s\tremaining: 2.02s\n",
      "795:\tlearn: 0.3156002\ttotal: 7.85s\tremaining: 2.01s\n",
      "796:\tlearn: 0.3154794\ttotal: 7.86s\tremaining: 2s\n",
      "797:\tlearn: 0.3153837\ttotal: 7.87s\tremaining: 1.99s\n",
      "798:\tlearn: 0.3152438\ttotal: 7.88s\tremaining: 1.98s\n",
      "799:\tlearn: 0.3152081\ttotal: 7.88s\tremaining: 1.97s\n",
      "800:\tlearn: 0.3151142\ttotal: 7.89s\tremaining: 1.96s\n",
      "801:\tlearn: 0.3150486\ttotal: 7.9s\tremaining: 1.95s\n",
      "802:\tlearn: 0.3150126\ttotal: 7.91s\tremaining: 1.94s\n",
      "803:\tlearn: 0.3149672\ttotal: 7.92s\tremaining: 1.93s\n",
      "804:\tlearn: 0.3148799\ttotal: 7.93s\tremaining: 1.92s\n",
      "805:\tlearn: 0.3148077\ttotal: 7.94s\tremaining: 1.91s\n",
      "806:\tlearn: 0.3147420\ttotal: 7.95s\tremaining: 1.9s\n",
      "807:\tlearn: 0.3146714\ttotal: 7.96s\tremaining: 1.89s\n",
      "808:\tlearn: 0.3145857\ttotal: 7.97s\tremaining: 1.88s\n",
      "809:\tlearn: 0.3145530\ttotal: 7.98s\tremaining: 1.87s\n",
      "810:\tlearn: 0.3144864\ttotal: 7.99s\tremaining: 1.86s\n",
      "811:\tlearn: 0.3144676\ttotal: 8s\tremaining: 1.85s\n",
      "812:\tlearn: 0.3144220\ttotal: 8.01s\tremaining: 1.84s\n",
      "813:\tlearn: 0.3143492\ttotal: 8.02s\tremaining: 1.83s\n",
      "814:\tlearn: 0.3143285\ttotal: 8.03s\tremaining: 1.82s\n",
      "815:\tlearn: 0.3142737\ttotal: 8.04s\tremaining: 1.81s\n",
      "816:\tlearn: 0.3141956\ttotal: 8.05s\tremaining: 1.8s\n",
      "817:\tlearn: 0.3141434\ttotal: 8.05s\tremaining: 1.79s\n",
      "818:\tlearn: 0.3140952\ttotal: 8.06s\tremaining: 1.78s\n",
      "819:\tlearn: 0.3140301\ttotal: 8.07s\tremaining: 1.77s\n",
      "820:\tlearn: 0.3139743\ttotal: 8.08s\tremaining: 1.76s\n",
      "821:\tlearn: 0.3139163\ttotal: 8.09s\tremaining: 1.75s\n",
      "822:\tlearn: 0.3138145\ttotal: 8.1s\tremaining: 1.74s\n",
      "823:\tlearn: 0.3137610\ttotal: 8.11s\tremaining: 1.73s\n",
      "824:\tlearn: 0.3136983\ttotal: 8.12s\tremaining: 1.72s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "825:\tlearn: 0.3136547\ttotal: 8.13s\tremaining: 1.71s\n",
      "826:\tlearn: 0.3136317\ttotal: 8.14s\tremaining: 1.7s\n",
      "827:\tlearn: 0.3135666\ttotal: 8.15s\tremaining: 1.69s\n",
      "828:\tlearn: 0.3135105\ttotal: 8.16s\tremaining: 1.68s\n",
      "829:\tlearn: 0.3134305\ttotal: 8.17s\tremaining: 1.67s\n",
      "830:\tlearn: 0.3133574\ttotal: 8.18s\tremaining: 1.66s\n",
      "831:\tlearn: 0.3132939\ttotal: 8.19s\tremaining: 1.65s\n",
      "832:\tlearn: 0.3132610\ttotal: 8.2s\tremaining: 1.64s\n",
      "833:\tlearn: 0.3132073\ttotal: 8.21s\tremaining: 1.63s\n",
      "834:\tlearn: 0.3131537\ttotal: 8.22s\tremaining: 1.62s\n",
      "835:\tlearn: 0.3130741\ttotal: 8.23s\tremaining: 1.61s\n",
      "836:\tlearn: 0.3129937\ttotal: 8.23s\tremaining: 1.6s\n",
      "837:\tlearn: 0.3129446\ttotal: 8.24s\tremaining: 1.59s\n",
      "838:\tlearn: 0.3129020\ttotal: 8.25s\tremaining: 1.58s\n",
      "839:\tlearn: 0.3128615\ttotal: 8.26s\tremaining: 1.57s\n",
      "840:\tlearn: 0.3127967\ttotal: 8.27s\tremaining: 1.56s\n",
      "841:\tlearn: 0.3127348\ttotal: 8.28s\tremaining: 1.55s\n",
      "842:\tlearn: 0.3126495\ttotal: 8.29s\tremaining: 1.54s\n",
      "843:\tlearn: 0.3125774\ttotal: 8.3s\tremaining: 1.53s\n",
      "844:\tlearn: 0.3125334\ttotal: 8.31s\tremaining: 1.52s\n",
      "845:\tlearn: 0.3124173\ttotal: 8.32s\tremaining: 1.51s\n",
      "846:\tlearn: 0.3123862\ttotal: 8.33s\tremaining: 1.5s\n",
      "847:\tlearn: 0.3123269\ttotal: 8.34s\tremaining: 1.5s\n",
      "848:\tlearn: 0.3122662\ttotal: 8.35s\tremaining: 1.49s\n",
      "849:\tlearn: 0.3121781\ttotal: 8.36s\tremaining: 1.48s\n",
      "850:\tlearn: 0.3120935\ttotal: 8.37s\tremaining: 1.47s\n",
      "851:\tlearn: 0.3120578\ttotal: 8.38s\tremaining: 1.46s\n",
      "852:\tlearn: 0.3120052\ttotal: 8.39s\tremaining: 1.45s\n",
      "853:\tlearn: 0.3119750\ttotal: 8.39s\tremaining: 1.44s\n",
      "854:\tlearn: 0.3118953\ttotal: 8.4s\tremaining: 1.43s\n",
      "855:\tlearn: 0.3118509\ttotal: 8.41s\tremaining: 1.42s\n",
      "856:\tlearn: 0.3118086\ttotal: 8.42s\tremaining: 1.41s\n",
      "857:\tlearn: 0.3117486\ttotal: 8.43s\tremaining: 1.4s\n",
      "858:\tlearn: 0.3116921\ttotal: 8.44s\tremaining: 1.39s\n",
      "859:\tlearn: 0.3116378\ttotal: 8.45s\tremaining: 1.38s\n",
      "860:\tlearn: 0.3116062\ttotal: 8.46s\tremaining: 1.36s\n",
      "861:\tlearn: 0.3115658\ttotal: 8.47s\tremaining: 1.35s\n",
      "862:\tlearn: 0.3114823\ttotal: 8.48s\tremaining: 1.34s\n",
      "863:\tlearn: 0.3114047\ttotal: 8.49s\tremaining: 1.34s\n",
      "864:\tlearn: 0.3113555\ttotal: 8.5s\tremaining: 1.33s\n",
      "865:\tlearn: 0.3112656\ttotal: 8.51s\tremaining: 1.32s\n",
      "866:\tlearn: 0.3111788\ttotal: 8.52s\tremaining: 1.31s\n",
      "867:\tlearn: 0.3111567\ttotal: 8.53s\tremaining: 1.3s\n",
      "868:\tlearn: 0.3111095\ttotal: 8.54s\tremaining: 1.29s\n",
      "869:\tlearn: 0.3110907\ttotal: 8.55s\tremaining: 1.28s\n",
      "870:\tlearn: 0.3110263\ttotal: 8.56s\tremaining: 1.27s\n",
      "871:\tlearn: 0.3110103\ttotal: 8.57s\tremaining: 1.26s\n",
      "872:\tlearn: 0.3109552\ttotal: 8.57s\tremaining: 1.25s\n",
      "873:\tlearn: 0.3108946\ttotal: 8.58s\tremaining: 1.24s\n",
      "874:\tlearn: 0.3108563\ttotal: 8.59s\tremaining: 1.23s\n",
      "875:\tlearn: 0.3108273\ttotal: 8.6s\tremaining: 1.22s\n",
      "876:\tlearn: 0.3107620\ttotal: 8.61s\tremaining: 1.21s\n",
      "877:\tlearn: 0.3107174\ttotal: 8.62s\tremaining: 1.2s\n",
      "878:\tlearn: 0.3106637\ttotal: 8.63s\tremaining: 1.19s\n",
      "879:\tlearn: 0.3106352\ttotal: 8.64s\tremaining: 1.18s\n",
      "880:\tlearn: 0.3105692\ttotal: 8.65s\tremaining: 1.17s\n",
      "881:\tlearn: 0.3105137\ttotal: 8.66s\tremaining: 1.16s\n",
      "882:\tlearn: 0.3104660\ttotal: 8.67s\tremaining: 1.15s\n",
      "883:\tlearn: 0.3104239\ttotal: 8.68s\tremaining: 1.14s\n",
      "884:\tlearn: 0.3103729\ttotal: 8.69s\tremaining: 1.13s\n",
      "885:\tlearn: 0.3103560\ttotal: 8.7s\tremaining: 1.12s\n",
      "886:\tlearn: 0.3103010\ttotal: 8.71s\tremaining: 1.11s\n",
      "887:\tlearn: 0.3102582\ttotal: 8.72s\tremaining: 1.1s\n",
      "888:\tlearn: 0.3102016\ttotal: 8.73s\tremaining: 1.09s\n",
      "889:\tlearn: 0.3101464\ttotal: 8.73s\tremaining: 1.08s\n",
      "890:\tlearn: 0.3100640\ttotal: 8.74s\tremaining: 1.07s\n",
      "891:\tlearn: 0.3100113\ttotal: 8.75s\tremaining: 1.06s\n",
      "892:\tlearn: 0.3099605\ttotal: 8.76s\tremaining: 1.05s\n",
      "893:\tlearn: 0.3098849\ttotal: 8.77s\tremaining: 1.04s\n",
      "894:\tlearn: 0.3098493\ttotal: 8.78s\tremaining: 1.03s\n",
      "895:\tlearn: 0.3097983\ttotal: 8.79s\tremaining: 1.02s\n",
      "896:\tlearn: 0.3097505\ttotal: 8.8s\tremaining: 1.01s\n",
      "897:\tlearn: 0.3097104\ttotal: 8.81s\tremaining: 1s\n",
      "898:\tlearn: 0.3096671\ttotal: 8.82s\tremaining: 991ms\n",
      "899:\tlearn: 0.3095866\ttotal: 8.83s\tremaining: 981ms\n",
      "900:\tlearn: 0.3095146\ttotal: 8.84s\tremaining: 972ms\n",
      "901:\tlearn: 0.3094745\ttotal: 8.85s\tremaining: 962ms\n",
      "902:\tlearn: 0.3094175\ttotal: 8.86s\tremaining: 952ms\n",
      "903:\tlearn: 0.3093529\ttotal: 8.87s\tremaining: 942ms\n",
      "904:\tlearn: 0.3093091\ttotal: 8.88s\tremaining: 932ms\n",
      "905:\tlearn: 0.3092623\ttotal: 8.89s\tremaining: 922ms\n",
      "906:\tlearn: 0.3091944\ttotal: 8.9s\tremaining: 912ms\n",
      "907:\tlearn: 0.3091483\ttotal: 8.9s\tremaining: 902ms\n",
      "908:\tlearn: 0.3090961\ttotal: 8.91s\tremaining: 892ms\n",
      "909:\tlearn: 0.3090276\ttotal: 8.92s\tremaining: 883ms\n",
      "910:\tlearn: 0.3089836\ttotal: 8.93s\tremaining: 873ms\n",
      "911:\tlearn: 0.3089102\ttotal: 8.94s\tremaining: 863ms\n",
      "912:\tlearn: 0.3088588\ttotal: 8.95s\tremaining: 853ms\n",
      "913:\tlearn: 0.3087973\ttotal: 8.96s\tremaining: 843ms\n",
      "914:\tlearn: 0.3087511\ttotal: 8.97s\tremaining: 833ms\n",
      "915:\tlearn: 0.3087072\ttotal: 8.98s\tremaining: 823ms\n",
      "916:\tlearn: 0.3086659\ttotal: 8.99s\tremaining: 814ms\n",
      "917:\tlearn: 0.3085972\ttotal: 9s\tremaining: 804ms\n",
      "918:\tlearn: 0.3085633\ttotal: 9.01s\tremaining: 794ms\n",
      "919:\tlearn: 0.3084919\ttotal: 9.02s\tremaining: 784ms\n",
      "920:\tlearn: 0.3084419\ttotal: 9.03s\tremaining: 775ms\n",
      "921:\tlearn: 0.3083439\ttotal: 9.04s\tremaining: 765ms\n",
      "922:\tlearn: 0.3082952\ttotal: 9.05s\tremaining: 755ms\n",
      "923:\tlearn: 0.3082506\ttotal: 9.06s\tremaining: 745ms\n",
      "924:\tlearn: 0.3082080\ttotal: 9.06s\tremaining: 735ms\n",
      "925:\tlearn: 0.3081524\ttotal: 9.07s\tremaining: 725ms\n",
      "926:\tlearn: 0.3081011\ttotal: 9.08s\tremaining: 715ms\n",
      "927:\tlearn: 0.3080606\ttotal: 9.09s\tremaining: 705ms\n",
      "928:\tlearn: 0.3080149\ttotal: 9.1s\tremaining: 696ms\n",
      "929:\tlearn: 0.3079620\ttotal: 9.11s\tremaining: 686ms\n",
      "930:\tlearn: 0.3078996\ttotal: 9.12s\tremaining: 676ms\n",
      "931:\tlearn: 0.3078648\ttotal: 9.13s\tremaining: 666ms\n",
      "932:\tlearn: 0.3078170\ttotal: 9.14s\tremaining: 656ms\n",
      "933:\tlearn: 0.3077327\ttotal: 9.14s\tremaining: 646ms\n",
      "934:\tlearn: 0.3076835\ttotal: 9.16s\tremaining: 637ms\n",
      "935:\tlearn: 0.3076186\ttotal: 9.17s\tremaining: 627ms\n",
      "936:\tlearn: 0.3075379\ttotal: 9.18s\tremaining: 617ms\n",
      "937:\tlearn: 0.3074992\ttotal: 9.19s\tremaining: 608ms\n",
      "938:\tlearn: 0.3074225\ttotal: 9.2s\tremaining: 598ms\n",
      "939:\tlearn: 0.3073903\ttotal: 9.21s\tremaining: 588ms\n",
      "940:\tlearn: 0.3073240\ttotal: 9.22s\tremaining: 578ms\n",
      "941:\tlearn: 0.3072754\ttotal: 9.23s\tremaining: 568ms\n",
      "942:\tlearn: 0.3072503\ttotal: 9.24s\tremaining: 558ms\n",
      "943:\tlearn: 0.3072198\ttotal: 9.25s\tremaining: 549ms\n",
      "944:\tlearn: 0.3071200\ttotal: 9.26s\tremaining: 539ms\n",
      "945:\tlearn: 0.3070971\ttotal: 9.26s\tremaining: 529ms\n",
      "946:\tlearn: 0.3070238\ttotal: 9.27s\tremaining: 519ms\n",
      "947:\tlearn: 0.3069743\ttotal: 9.28s\tremaining: 509ms\n",
      "948:\tlearn: 0.3068624\ttotal: 9.29s\tremaining: 499ms\n",
      "949:\tlearn: 0.3067674\ttotal: 9.3s\tremaining: 489ms\n",
      "950:\tlearn: 0.3067333\ttotal: 9.31s\tremaining: 480ms\n",
      "951:\tlearn: 0.3066734\ttotal: 9.32s\tremaining: 470ms\n",
      "952:\tlearn: 0.3066390\ttotal: 9.33s\tremaining: 460ms\n",
      "953:\tlearn: 0.3065658\ttotal: 9.34s\tremaining: 450ms\n",
      "954:\tlearn: 0.3065166\ttotal: 9.35s\tremaining: 441ms\n",
      "955:\tlearn: 0.3064629\ttotal: 9.36s\tremaining: 431ms\n",
      "956:\tlearn: 0.3064465\ttotal: 9.37s\tremaining: 421ms\n",
      "957:\tlearn: 0.3063975\ttotal: 9.38s\tremaining: 411ms\n",
      "958:\tlearn: 0.3063492\ttotal: 9.39s\tremaining: 401ms\n",
      "959:\tlearn: 0.3062873\ttotal: 9.4s\tremaining: 392ms\n",
      "960:\tlearn: 0.3062427\ttotal: 9.41s\tremaining: 382ms\n",
      "961:\tlearn: 0.3061884\ttotal: 9.42s\tremaining: 372ms\n",
      "962:\tlearn: 0.3061448\ttotal: 9.43s\tremaining: 362ms\n",
      "963:\tlearn: 0.3060913\ttotal: 9.44s\tremaining: 353ms\n",
      "964:\tlearn: 0.3060544\ttotal: 9.45s\tremaining: 343ms\n",
      "965:\tlearn: 0.3060151\ttotal: 9.46s\tremaining: 333ms\n",
      "966:\tlearn: 0.3059841\ttotal: 9.47s\tremaining: 323ms\n",
      "967:\tlearn: 0.3059298\ttotal: 9.47s\tremaining: 313ms\n",
      "968:\tlearn: 0.3059147\ttotal: 9.48s\tremaining: 303ms\n",
      "969:\tlearn: 0.3058937\ttotal: 9.49s\tremaining: 294ms\n",
      "970:\tlearn: 0.3057890\ttotal: 9.5s\tremaining: 284ms\n",
      "971:\tlearn: 0.3057029\ttotal: 9.51s\tremaining: 274ms\n",
      "972:\tlearn: 0.3056704\ttotal: 9.53s\tremaining: 264ms\n",
      "973:\tlearn: 0.3056554\ttotal: 9.54s\tremaining: 255ms\n",
      "974:\tlearn: 0.3056040\ttotal: 9.55s\tremaining: 245ms\n",
      "975:\tlearn: 0.3055703\ttotal: 9.55s\tremaining: 235ms\n",
      "976:\tlearn: 0.3055178\ttotal: 9.56s\tremaining: 225ms\n",
      "977:\tlearn: 0.3054637\ttotal: 9.57s\tremaining: 215ms\n",
      "978:\tlearn: 0.3054281\ttotal: 9.58s\tremaining: 206ms\n",
      "979:\tlearn: 0.3053584\ttotal: 9.59s\tremaining: 196ms\n",
      "980:\tlearn: 0.3053237\ttotal: 9.6s\tremaining: 186ms\n",
      "981:\tlearn: 0.3052555\ttotal: 9.61s\tremaining: 176ms\n",
      "982:\tlearn: 0.3052246\ttotal: 9.62s\tremaining: 166ms\n",
      "983:\tlearn: 0.3051833\ttotal: 9.63s\tremaining: 157ms\n",
      "984:\tlearn: 0.3051450\ttotal: 9.63s\tremaining: 147ms\n",
      "985:\tlearn: 0.3051071\ttotal: 9.64s\tremaining: 137ms\n",
      "986:\tlearn: 0.3050866\ttotal: 9.65s\tremaining: 127ms\n",
      "987:\tlearn: 0.3050498\ttotal: 9.66s\tremaining: 117ms\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "988:\tlearn: 0.3049903\ttotal: 9.67s\tremaining: 108ms\n",
      "989:\tlearn: 0.3049533\ttotal: 9.69s\tremaining: 97.8ms\n",
      "990:\tlearn: 0.3048912\ttotal: 9.7s\tremaining: 88.1ms\n",
      "991:\tlearn: 0.3048651\ttotal: 9.71s\tremaining: 78.3ms\n",
      "992:\tlearn: 0.3048222\ttotal: 9.72s\tremaining: 68.5ms\n",
      "993:\tlearn: 0.3047523\ttotal: 9.73s\tremaining: 58.7ms\n",
      "994:\tlearn: 0.3047226\ttotal: 9.73s\tremaining: 48.9ms\n",
      "995:\tlearn: 0.3046834\ttotal: 9.74s\tremaining: 39.1ms\n",
      "996:\tlearn: 0.3046611\ttotal: 9.75s\tremaining: 29.3ms\n",
      "997:\tlearn: 0.3045757\ttotal: 9.76s\tremaining: 19.6ms\n",
      "998:\tlearn: 0.3045389\ttotal: 9.77s\tremaining: 9.78ms\n",
      "999:\tlearn: 0.3045088\ttotal: 9.78s\tremaining: 0us\n",
      "0.8256042659207135\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "CatBoost=CatBoostClassifier()\n",
    "\n",
    "CatBoost.fit(X_train,y_train)\n",
    "\n",
    "pred=CatBoost.predict(X_test)\n",
    "\n",
    "plot_confusion_matrix(CatBoost,X_test, y_test)\n",
    "metrics.plot_roc_curve(CatBoost, X_test, y_test)\n",
    "print (f1_score(y_test, pred, average='macro'))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {},
   "outputs": [],
   "source": [
    "prediction5=CatBoost.predict(Test)\n",
    "identity=test['Customer Id']\n",
    "\n",
    "Prediction=pd.DataFrame(prediction5,identity)\n",
    "Prediction.columns=['Claim']\n",
    "\n",
    "Prediction.to_csv(\"prediction5.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Support Vector Classifiers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.6265877037677672\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "svc=SVC()\n",
    "\n",
    "svc.fit(X_train,y_train)\n",
    "\n",
    "pred=svc.predict(X_test)\n",
    "\n",
    "plot_confusion_matrix(svc,X_test, y_test)\n",
    "metrics.plot_roc_curve(svc, X_test, y_test)\n",
    "print (f1_score(y_test, pred, average='macro'))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [],
   "source": [
    "prediction6=svc.predict(Test)\n",
    "identity=test['Customer Id']\n",
    "\n",
    "Prediction=pd.DataFrame(prediction6,identity)\n",
    "Prediction.columns=['Claim']\n",
    "\n",
    "Prediction.to_csv(\"prediction6.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Voting Classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.6265877037677672\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "clf1=model_log=LogisticRegression(C=100, solver='newton-cg')\n",
    "clf2=SVC(probability=True)\n",
    "Voting=VotingClassifier(estimators=[('lr', clf1), ('rf', clf2), ('gnb', clf3)],voting='soft', weights=[2,1,1],flatten_transform=True)\n",
    "\n",
    "Voting.fit(X_train,y_train)\n",
    "\n",
    "plot_confusion_matrix(Voting,X_test, y_test)\n",
    "metrics.plot_roc_curve(Voting, X_test, y_test)\n",
    "print (f1_score(y_test, pred, average='macro'))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "metadata": {},
   "outputs": [],
   "source": [
    "prediction7=Voting.predict(Test)\n",
    "identity=test['Customer Id']\n",
    "\n",
    "Prediction=pd.DataFrame(prediction7,identity)\n",
    "Prediction.columns=['Claim']\n",
    "\n",
    "Prediction.to_csv(\"prediction7.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "clf1=model_log=LogisticRegression(C=100, solver='newton-cg')\n",
    "clf2=SVC(probability=True)\n",
    "Voting=VotingClassifier(estimators=[('lr', clf1), ('rf', clf2)],voting='soft', weights=[2,1],flatten_transform=True)\n",
    "\n",
    "Voting.fit(X_train,y_train)\n",
    "\n",
    "plot_confusion_matrix(Voting,X_test, y_test)\n",
    "metrics.plot_roc_curve(Voting, X_test, y_test)\n",
    "print (f1_score(y_test, pred, average='macro'))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "prediction8=Voting.predict(Test)\n",
    "identity=test['Customer Id']\n",
    "\n",
    "Prediction=pd.DataFrame(prediction8,identity)\n",
    "Prediction.columns=['Claim']\n",
    "\n",
    "Prediction.to_csv(\"prediction8.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.6265877037677672\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "clf1=SVC(probability=True)\n",
    "clf2=model_log=LogisticRegression(C=100, solver='newton-cg')\n",
    "Voting=VotingClassifier(estimators=[('lr', clf1), ('rf', clf2)],voting='soft', weights=[2,1],flatten_transform=True)\n",
    "\n",
    "Voting.fit(X_train,y_train)\n",
    "\n",
    "plot_confusion_matrix(Voting,X_test, y_test)\n",
    "metrics.plot_roc_curve(Voting, X_test, y_test)\n",
    "print (f1_score(y_test, pred, average='macro'))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "metadata": {},
   "outputs": [],
   "source": [
    "prediction9=Voting.predict(Test)\n",
    "identity=test['Customer Id']\n",
    "\n",
    "Prediction=pd.DataFrame(prediction9,identity)\n",
    "Prediction.columns=['Claim']\n",
    "\n",
    "Prediction.to_csv(\"prediction9.csv\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
